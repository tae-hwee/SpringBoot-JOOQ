plugins {
	id 'java'
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'nu.studer.jooq' version '4.2'		// java 8, gradle 5.6.4와 호환되는 버전
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
	implementation 'org.jooq:jooq-codegen'
	compileOnly 'org.projectlombok:lombok'
	compile 'org.jooq:jooq'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	jooqRuntime 'org.mariadb.jdbc:mariadb-java-client:2.7.5'
}

jooq {
	version = '3.13.1'
	edition = 'OSS'
	sample(sourceSets.main) {
		jdbc {
			driver = 'org.mariadb.jdbc.Driver'
			url = 'jdbc:mariadb://127.0.0.1:3306/rs-parking-node?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;autoReconnectForPools=true'
			user = 'root'
			password = '1234'
			schema = 'rs-parking-node'
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			strategy {
				name = 'org.jooq.codegen.DefaultGeneratorStrategy'
			}
			database {
				name = 'org.jooq.meta.mariadb.MariaDBDatabase'
			}
			generate {
				deprecated = false
				records = true
			}
			target {
				packageName = 'generated.org.jooq'
				directory = 'src/main/java'
				encoding = 'UTF-8'
			}
		}
	}
}

compileJava.dependsOn.remove("generateSampleJooqSchemaSource")

task codegen {
	dependsOn generateSampleJooqSchemaSource
}

tasks.named('test') {
	useJUnitPlatform()
}