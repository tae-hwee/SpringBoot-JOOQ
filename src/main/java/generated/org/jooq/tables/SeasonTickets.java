/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Indexes;
import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.SeasonTicketsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonTickets extends TableImpl<SeasonTicketsRecord> {

    private static final long serialVersionUID = 1131893839;

    /**
     * The reference instance of <code>rs-parking-node.season_tickets</code>
     */
    public static final SeasonTickets SEASON_TICKETS = new SeasonTickets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeasonTicketsRecord> getRecordType() {
        return SeasonTicketsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.season_tickets.districtId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> DISTRICTID = createField(DSL.name("districtId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.lpn</code>.
     */
    public final TableField<SeasonTicketsRecord, String> LPN = createField(DSL.name("lpn"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.status</code>.
     */
    public final TableField<SeasonTicketsRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.registrant</code>.
     */
    public final TableField<SeasonTicketsRecord, String> REGISTRANT = createField(DSL.name("registrant"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.phoneNumber</code>.
     */
    public final TableField<SeasonTicketsRecord, String> PHONENUMBER = createField(DSL.name("phoneNumber"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.start</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> START = createField(DSL.name("start"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.end</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> END = createField(DSL.name("end"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.bandStart</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalTime> BANDSTART = createField(DSL.name("bandStart"), org.jooq.impl.SQLDataType.LOCALTIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALTIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.bandEnd</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalTime> BANDEND = createField(DSL.name("bandEnd"), org.jooq.impl.SQLDataType.LOCALTIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALTIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.creatorId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> CREATORID = createField(DSL.name("creatorId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.created</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.dropperId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> DROPPERID = createField(DSL.name("dropperId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.dropped</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.seasonTicketId</code>.
     */
    public final TableField<SeasonTicketsRecord, String> SEASONTICKETID = createField(DSL.name("seasonTicketId"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.details</code>.
     */
    public final TableField<SeasonTicketsRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.VARCHAR(2048).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.type</code>.
     */
    public final TableField<SeasonTicketsRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.paymentType</code>.
     */
    public final TableField<SeasonTicketsRecord, String> PAYMENTTYPE = createField(DSL.name("paymentType"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.seasonTicketGroupId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> SEASONTICKETGROUPID = createField(DSL.name("seasonTicketGroupId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.seasonTicketTemplateId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> SEASONTICKETTEMPLATEID = createField(DSL.name("seasonTicketTemplateId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.department</code>.
     */
    public final TableField<SeasonTicketsRecord, String> DEPARTMENT = createField(DSL.name("department"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.payedFee</code>.
     */
    public final TableField<SeasonTicketsRecord, BigDecimal> PAYEDFEE = createField(DSL.name("payedFee"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.payed</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> PAYED = createField(DSL.name("payed"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.payments</code>.
     */
    public final TableField<SeasonTicketsRecord, String> PAYMENTS = createField(DSL.name("payments"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.organization</code>.
     */
    public final TableField<SeasonTicketsRecord, String> ORGANIZATION = createField(DSL.name("organization"), org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.apiConnectionId</code>.
     */
    public final TableField<SeasonTicketsRecord, String> APICONNECTIONID = createField(DSL.name("apiConnectionId"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.aptCode</code>.
     */
    public final TableField<SeasonTicketsRecord, String> APTCODE = createField(DSL.name("aptCode"), org.jooq.impl.SQLDataType.VARCHAR(64).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.dong</code>.
     */
    public final TableField<SeasonTicketsRecord, String> DONG = createField(DSL.name("dong"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.ho</code>.
     */
    public final TableField<SeasonTicketsRecord, String> HO = createField(DSL.name("ho"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.paymentDetails</code>.
     */
    public final TableField<SeasonTicketsRecord, String> PAYMENTDETAILS = createField(DSL.name("paymentDetails"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.masterSeasonTicketId</code>.
     */
    public final TableField<SeasonTicketsRecord, String> MASTERSEASONTICKETID = createField(DSL.name("masterSeasonTicketId"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.memberId</code>.
     */
    public final TableField<SeasonTicketsRecord, Long> MEMBERID = createField(DSL.name("memberId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.paymentId</code>.
     */
    public final TableField<SeasonTicketsRecord, String> PAYMENTID = createField(DSL.name("paymentId"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.lastUpdated</code>.
     */
    public final TableField<SeasonTicketsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.umid</code>.
     */
    public final TableField<SeasonTicketsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.remainedApplyCount</code>.
     */
    public final TableField<SeasonTicketsRecord, Integer> REMAINEDAPPLYCOUNT = createField(DSL.name("remainedApplyCount"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_tickets.emart_seq</code>.
     */
    public final TableField<SeasonTicketsRecord, String> EMART_SEQ = createField(DSL.name("emart_seq"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.season_tickets</code> table reference
     */
    public SeasonTickets() {
        this(DSL.name("season_tickets"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_tickets</code> table reference
     */
    public SeasonTickets(String alias) {
        this(DSL.name(alias), SEASON_TICKETS);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_tickets</code> table reference
     */
    public SeasonTickets(Name alias) {
        this(alias, SEASON_TICKETS);
    }

    private SeasonTickets(Name alias, Table<SeasonTicketsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeasonTickets(Name alias, Table<SeasonTicketsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SeasonTickets(Table<O> child, ForeignKey<O, SeasonTicketsRecord> key) {
        super(child, key, SEASON_TICKETS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEASON_TICKETS_INDEX_DROPPED, Indexes.SEASON_TICKETS_INDEX_LPN);
    }

    @Override
    public UniqueKey<SeasonTicketsRecord> getPrimaryKey() {
        return Keys.KEY_SEASON_TICKETS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SeasonTicketsRecord>> getKeys() {
        return Arrays.<UniqueKey<SeasonTicketsRecord>>asList(Keys.KEY_SEASON_TICKETS_PRIMARY);
    }

    @Override
    public List<ForeignKey<SeasonTicketsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeasonTicketsRecord, ?>>asList(Keys.FK_KDKSEWLSFJWFJW, Keys.FK_KASKSLSGRJEJSFFSEF, Keys.FK_FFIEJSLJESLFRJSFSWE, Keys.FKTOV8I5Y8WB7L78HCRNOBQ2M4N, Keys.FKC2B5DEPYQ3L798MCIOMKRG5TV, Keys.FK5LKBVQGXHYTHNMCJBLJJ1O7PN, Keys.FKEYL011SRCS3O6SW4GTQDWX001, Keys.FKC1W71Y8DHYVU2L7YVCFPBH0LA);
    }

    public Districts districts() {
        return new Districts(this, Keys.FK_KDKSEWLSFJWFJW);
    }

    public Members fkKaskslsgrjejsffsef() {
        return new Members(this, Keys.FK_KASKSLSGRJEJSFFSEF);
    }

    public Members fkFfiejsljeslfrjsfswe() {
        return new Members(this, Keys.FK_FFIEJSLJESLFRJSFSWE);
    }

    public SeasonTicketGroups seasonTicketGroups() {
        return new SeasonTicketGroups(this, Keys.FKTOV8I5Y8WB7L78HCRNOBQ2M4N);
    }

    public SeasonTicketTemplates seasonTicketTemplates() {
        return new SeasonTicketTemplates(this, Keys.FKC2B5DEPYQ3L798MCIOMKRG5TV);
    }

    public SeasonTickets seasonTickets() {
        return new SeasonTickets(this, Keys.FK5LKBVQGXHYTHNMCJBLJJ1O7PN);
    }

    public Members fkeyl011srcs3o6sw4gtqdwx001() {
        return new Members(this, Keys.FKEYL011SRCS3O6SW4GTQDWX001);
    }

    public Payments payments() {
        return new Payments(this, Keys.FKC1W71Y8DHYVU2L7YVCFPBH0LA);
    }

    @Override
    public SeasonTickets as(String alias) {
        return new SeasonTickets(DSL.name(alias), this);
    }

    @Override
    public SeasonTickets as(Name alias) {
        return new SeasonTickets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTickets rename(String name) {
        return new SeasonTickets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTickets rename(Name name) {
        return new SeasonTickets(name, null);
    }
}
