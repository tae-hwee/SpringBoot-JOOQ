/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.EmartMachinesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmartMachines extends TableImpl<EmartMachinesRecord> {

    private static final long serialVersionUID = -864782698;

    /**
     * The reference instance of <code>rs-parking-node.emart_machines</code>
     */
    public static final EmartMachines EMART_MACHINES = new EmartMachines();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmartMachinesRecord> getRecordType() {
        return EmartMachinesRecord.class;
    }

    /**
     * The column <code>rs-parking-node.emart_machines.STRCD_HQ</code>. 점포 코드(영업점)
     */
    public final TableField<EmartMachinesRecord, String> STRCD_HQ = createField(DSL.name("STRCD_HQ"), org.jooq.impl.SQLDataType.CHAR(4).nullable(false), this, "점포 코드(영업점)");

    /**
     * The column <code>rs-parking-node.emart_machines.EQPT_ID</code>. 장비 ID
     */
    public final TableField<EmartMachinesRecord, String> EQPT_ID = createField(DSL.name("EQPT_ID"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "장비 ID");

    /**
     * The column <code>rs-parking-node.emart_machines.EQPT_TYPE</code>. 장비 종류(IN : 입구관제, OT : 출차관제, M : 출구무인, P : 출구유인, K : 사전무인)
     */
    public final TableField<EmartMachinesRecord, String> EQPT_TYPE = createField(DSL.name("EQPT_TYPE"), org.jooq.impl.SQLDataType.CHAR(2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "장비 종류(IN : 입구관제, OT : 출차관제, M : 출구무인, P : 출구유인, K : 사전무인)");

    /**
     * The column <code>rs-parking-node.emart_machines.EQPT_EXP</code>. 장비 설명
     */
    public final TableField<EmartMachinesRecord, String> EQPT_EXP = createField(DSL.name("EQPT_EXP"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "장비 설명");

    /**
     * Create a <code>rs-parking-node.emart_machines</code> table reference
     */
    public EmartMachines() {
        this(DSL.name("emart_machines"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.emart_machines</code> table reference
     */
    public EmartMachines(String alias) {
        this(DSL.name(alias), EMART_MACHINES);
    }

    /**
     * Create an aliased <code>rs-parking-node.emart_machines</code> table reference
     */
    public EmartMachines(Name alias) {
        this(alias, EMART_MACHINES);
    }

    private EmartMachines(Name alias, Table<EmartMachinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmartMachines(Name alias, Table<EmartMachinesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> EmartMachines(Table<O> child, ForeignKey<O, EmartMachinesRecord> key) {
        super(child, key, EMART_MACHINES);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public EmartMachines as(String alias) {
        return new EmartMachines(DSL.name(alias), this);
    }

    @Override
    public EmartMachines as(Name alias) {
        return new EmartMachines(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmartMachines rename(String name) {
        return new EmartMachines(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EmartMachines rename(Name name) {
        return new EmartMachines(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
