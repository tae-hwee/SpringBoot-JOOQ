/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.SeasonTicketGroupsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonTicketGroups extends TableImpl<SeasonTicketGroupsRecord> {

    private static final long serialVersionUID = -448633084;

    /**
     * The reference instance of <code>rs-parking-node.season_ticket_groups</code>
     */
    public static final SeasonTicketGroups SEASON_TICKET_GROUPS = new SeasonTicketGroups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeasonTicketGroupsRecord> getRecordType() {
        return SeasonTicketGroupsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.season_ticket_groups.seasonTicketGroupId</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, Long> SEASONTICKETGROUPID = createField(DSL.name("seasonTicketGroupId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.displayName</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, String> DISPLAYNAME = createField(DSL.name("displayName"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.name</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.apiConnectionId</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, String> APICONNECTIONID = createField(DSL.name("apiConnectionId"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.details</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.created</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.lastUpdated</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.umid</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_groups.dropped</code>.
     */
    public final TableField<SeasonTicketGroupsRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>rs-parking-node.season_ticket_groups</code> table reference
     */
    public SeasonTicketGroups() {
        this(DSL.name("season_ticket_groups"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_ticket_groups</code> table reference
     */
    public SeasonTicketGroups(String alias) {
        this(DSL.name(alias), SEASON_TICKET_GROUPS);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_ticket_groups</code> table reference
     */
    public SeasonTicketGroups(Name alias) {
        this(alias, SEASON_TICKET_GROUPS);
    }

    private SeasonTicketGroups(Name alias, Table<SeasonTicketGroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeasonTicketGroups(Name alias, Table<SeasonTicketGroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SeasonTicketGroups(Table<O> child, ForeignKey<O, SeasonTicketGroupsRecord> key) {
        super(child, key, SEASON_TICKET_GROUPS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<SeasonTicketGroupsRecord, Long> getIdentity() {
        return Keys.IDENTITY_SEASON_TICKET_GROUPS;
    }

    @Override
    public UniqueKey<SeasonTicketGroupsRecord> getPrimaryKey() {
        return Keys.KEY_SEASON_TICKET_GROUPS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SeasonTicketGroupsRecord>> getKeys() {
        return Arrays.<UniqueKey<SeasonTicketGroupsRecord>>asList(Keys.KEY_SEASON_TICKET_GROUPS_PRIMARY, Keys.KEY_SEASON_TICKET_GROUPS_UK_2M9GAVV6AHVMM1UBTI59WPEPV);
    }

    @Override
    public SeasonTicketGroups as(String alias) {
        return new SeasonTicketGroups(DSL.name(alias), this);
    }

    @Override
    public SeasonTicketGroups as(Name alias) {
        return new SeasonTicketGroups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTicketGroups rename(String name) {
        return new SeasonTicketGroups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTicketGroups rename(Name name) {
        return new SeasonTicketGroups(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, LocalDateTime, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
