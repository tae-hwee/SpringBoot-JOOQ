/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.PublicDiscountsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PublicDiscounts extends TableImpl<PublicDiscountsRecord> {

    private static final long serialVersionUID = -539735635;

    /**
     * The reference instance of <code>rs-parking-node.public_discounts</code>
     */
    public static final PublicDiscounts PUBLIC_DISCOUNTS = new PublicDiscounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PublicDiscountsRecord> getRecordType() {
        return PublicDiscountsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.public_discounts.publicDiscountId</code>.
     */
    public final TableField<PublicDiscountsRecord, Long> PUBLICDISCOUNTID = createField(DSL.name("publicDiscountId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.code</code>.
     */
    public final TableField<PublicDiscountsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.visitId</code>.
     */
    public final TableField<PublicDiscountsRecord, Long> VISITID = createField(DSL.name("visitId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.details</code>.
     */
    public final TableField<PublicDiscountsRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.valuatedAmount</code>.
     */
    public final TableField<PublicDiscountsRecord, BigDecimal> VALUATEDAMOUNT = createField(DSL.name("valuatedAmount"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.created</code>.
     */
    public final TableField<PublicDiscountsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.lastUpdated</code>.
     */
    public final TableField<PublicDiscountsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.umid</code>.
     */
    public final TableField<PublicDiscountsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.public_discounts.barcode</code>.
     */
    public final TableField<PublicDiscountsRecord, String> BARCODE = createField(DSL.name("barcode"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.public_discounts</code> table reference
     */
    public PublicDiscounts() {
        this(DSL.name("public_discounts"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.public_discounts</code> table reference
     */
    public PublicDiscounts(String alias) {
        this(DSL.name(alias), PUBLIC_DISCOUNTS);
    }

    /**
     * Create an aliased <code>rs-parking-node.public_discounts</code> table reference
     */
    public PublicDiscounts(Name alias) {
        this(alias, PUBLIC_DISCOUNTS);
    }

    private PublicDiscounts(Name alias, Table<PublicDiscountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private PublicDiscounts(Name alias, Table<PublicDiscountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> PublicDiscounts(Table<O> child, ForeignKey<O, PublicDiscountsRecord> key) {
        super(child, key, PUBLIC_DISCOUNTS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<PublicDiscountsRecord, Long> getIdentity() {
        return Keys.IDENTITY_PUBLIC_DISCOUNTS;
    }

    @Override
    public UniqueKey<PublicDiscountsRecord> getPrimaryKey() {
        return Keys.KEY_PUBLIC_DISCOUNTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<PublicDiscountsRecord>> getKeys() {
        return Arrays.<UniqueKey<PublicDiscountsRecord>>asList(Keys.KEY_PUBLIC_DISCOUNTS_PRIMARY, Keys.KEY_PUBLIC_DISCOUNTS_UK_IAQ7OJ529TBQ23T6LPATHRC55);
    }

    @Override
    public List<ForeignKey<PublicDiscountsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PublicDiscountsRecord, ?>>asList(Keys.FKI8KIQ436HRP4NB3FBB0174N01);
    }

    public Visits visits() {
        return new Visits(this, Keys.FKI8KIQ436HRP4NB3FBB0174N01);
    }

    @Override
    public PublicDiscounts as(String alias) {
        return new PublicDiscounts(DSL.name(alias), this);
    }

    @Override
    public PublicDiscounts as(Name alias) {
        return new PublicDiscounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PublicDiscounts rename(String name) {
        return new PublicDiscounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PublicDiscounts rename(Name name) {
        return new PublicDiscounts(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, Long, String, BigDecimal, LocalDateTime, LocalDateTime, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
