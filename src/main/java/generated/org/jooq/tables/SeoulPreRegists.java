/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Indexes;
import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.SeoulPreRegistsRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeoulPreRegists extends TableImpl<SeoulPreRegistsRecord> {

    private static final long serialVersionUID = 1888780958;

    /**
     * The reference instance of <code>rs-parking-node.seoul_pre_regists</code>
     */
    public static final SeoulPreRegists SEOUL_PRE_REGISTS = new SeoulPreRegists();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeoulPreRegistsRecord> getRecordType() {
        return SeoulPreRegistsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vhcleManageNo</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VHCLEMANAGENO = createField(DSL.name("vhcleManageNo"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.ffnlgSetleAgreAt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> FFNLGSETLEAGREAT = createField(DSL.name("ffnlgSetleAgreAt"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.greenTrnsportFfnlg</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> GREENTRNSPORTFFNLG = createField(DSL.name("greenTrnsportFfnlg"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.indexNo</code>.
     */
    public final TableField<SeoulPreRegistsRecord, Long> INDEXNO = createField(DSL.name("indexNo"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.mberNo</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> MBERNO = createField(DSL.name("mberNo"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.namsanFfnlg</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> NAMSANFFNLG = createField(DSL.name("namsanFfnlg"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.namsanPasmny</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> NAMSANPASMNY = createField(DSL.name("namsanPasmny"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.registered</code>.
     */
    public final TableField<SeoulPreRegistsRecord, LocalDateTime> REGISTERED = createField(DSL.name("registered"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.secsnAt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> SECSNAT = createField(DSL.name("secsnAt"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.suPblmngPrkplce</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> SUPBLMNGPRKPLCE = createField(DSL.name("suPblmngPrkplce"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.trnsitDscntAt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> TRNSITDSCNTAT = createField(DSL.name("trnsitDscntAt"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.useBeginDt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, LocalDate> USEBEGINDT = createField(DSL.name("useBeginDt"), org.jooq.impl.SQLDataType.LOCALDATE.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATE)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.useEndDt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, LocalDate> USEENDDT = createField(DSL.name("useEndDt"), org.jooq.impl.SQLDataType.LOCALDATE.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATE)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.usfeeSetleAgreAt</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> USFEESETLEAGREAT = createField(DSL.name("usfeeSetleAgreAt"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vhcleNo</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VHCLENO = createField(DSL.name("vhcleNo"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vhclePosesnTy</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VHCLEPOSESNTY = createField(DSL.name("vhclePosesnTy"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vhcleSttusTy</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VHCLESTTUSTY = createField(DSL.name("vhcleSttusTy"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vkeyCcmpCode1</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VKEYCCMPCODE1 = createField(DSL.name("vkeyCcmpCode1"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.seoul_pre_regists.vkeyCcmpCode2</code>.
     */
    public final TableField<SeoulPreRegistsRecord, String> VKEYCCMPCODE2 = createField(DSL.name("vkeyCcmpCode2"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.seoul_pre_regists</code> table reference
     */
    public SeoulPreRegists() {
        this(DSL.name("seoul_pre_regists"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.seoul_pre_regists</code> table reference
     */
    public SeoulPreRegists(String alias) {
        this(DSL.name(alias), SEOUL_PRE_REGISTS);
    }

    /**
     * Create an aliased <code>rs-parking-node.seoul_pre_regists</code> table reference
     */
    public SeoulPreRegists(Name alias) {
        this(alias, SEOUL_PRE_REGISTS);
    }

    private SeoulPreRegists(Name alias, Table<SeoulPreRegistsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeoulPreRegists(Name alias, Table<SeoulPreRegistsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SeoulPreRegists(Table<O> child, ForeignKey<O, SeoulPreRegistsRecord> key) {
        super(child, key, SEOUL_PRE_REGISTS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SEOUL_PRE_REGISTS_INDEX_VHCLENO);
    }

    @Override
    public UniqueKey<SeoulPreRegistsRecord> getPrimaryKey() {
        return Keys.KEY_SEOUL_PRE_REGISTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<SeoulPreRegistsRecord>> getKeys() {
        return Arrays.<UniqueKey<SeoulPreRegistsRecord>>asList(Keys.KEY_SEOUL_PRE_REGISTS_PRIMARY);
    }

    @Override
    public SeoulPreRegists as(String alias) {
        return new SeoulPreRegists(DSL.name(alias), this);
    }

    @Override
    public SeoulPreRegists as(Name alias) {
        return new SeoulPreRegists(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeoulPreRegists rename(String name) {
        return new SeoulPreRegists(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeoulPreRegists rename(Name name) {
        return new SeoulPreRegists(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, String, Long, String, String, String, LocalDateTime, String, String, String, LocalDate, LocalDate, String, String, String, String, String, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
