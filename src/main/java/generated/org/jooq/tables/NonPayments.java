/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.NonPaymentsRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NonPayments extends TableImpl<NonPaymentsRecord> {

    private static final long serialVersionUID = 2042716227;

    /**
     * The reference instance of <code>rs-parking-node.non_payments</code>
     */
    public static final NonPayments NON_PAYMENTS = new NonPayments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NonPaymentsRecord> getRecordType() {
        return NonPaymentsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.non_payments.nonPaymentId</code>.
     */
    public final TableField<NonPaymentsRecord, Long> NONPAYMENTID = createField(DSL.name("nonPaymentId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.address</code>.
     */
    public final TableField<NonPaymentsRecord, String> ADDRESS = createField(DSL.name("address"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.authCode</code>.
     */
    public final TableField<NonPaymentsRecord, String> AUTHCODE = createField(DSL.name("authCode"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.authDetails</code>.
     */
    public final TableField<NonPaymentsRecord, String> AUTHDETAILS = createField(DSL.name("authDetails"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.carNumber</code>.
     */
    public final TableField<NonPaymentsRecord, String> CARNUMBER = createField(DSL.name("carNumber"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.created</code>.
     */
    public final TableField<NonPaymentsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.details</code>.
     */
    public final TableField<NonPaymentsRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.dropped</code>.
     */
    public final TableField<NonPaymentsRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.expired</code>.
     */
    public final TableField<NonPaymentsRecord, LocalDate> EXPIRED = createField(DSL.name("expired"), org.jooq.impl.SQLDataType.LOCALDATE.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATE)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.expiredDay</code>.
     */
    public final TableField<NonPaymentsRecord, Integer> EXPIREDDAY = createField(DSL.name("expiredDay"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.finalFee</code>.
     */
    public final TableField<NonPaymentsRecord, BigDecimal> FINALFEE = createField(DSL.name("finalFee"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.lastUpdated</code>.
     */
    public final TableField<NonPaymentsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.memo</code>.
     */
    public final TableField<NonPaymentsRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.name</code>.
     */
    public final TableField<NonPaymentsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.oTid</code>.
     */
    public final TableField<NonPaymentsRecord, String> OTID = createField(DSL.name("oTid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.payed</code>.
     */
    public final TableField<NonPaymentsRecord, LocalDateTime> PAYED = createField(DSL.name("payed"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.payedFee</code>.
     */
    public final TableField<NonPaymentsRecord, BigDecimal> PAYEDFEE = createField(DSL.name("payedFee"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.paymentMethod</code>.
     */
    public final TableField<NonPaymentsRecord, String> PAYMENTMETHOD = createField(DSL.name("paymentMethod"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.paymentStatus</code>.
     */
    public final TableField<NonPaymentsRecord, String> PAYMENTSTATUS = createField(DSL.name("paymentStatus"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.status</code>.
     */
    public final TableField<NonPaymentsRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.tid</code>.
     */
    public final TableField<NonPaymentsRecord, String> TID = createField(DSL.name("tid"), org.jooq.impl.SQLDataType.VARCHAR(30).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.umid</code>.
     */
    public final TableField<NonPaymentsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.vbankName</code>.
     */
    public final TableField<NonPaymentsRecord, String> VBANKNAME = createField(DSL.name("vbankName"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.vbankNumber</code>.
     */
    public final TableField<NonPaymentsRecord, String> VBANKNUMBER = createField(DSL.name("vbankNumber"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.zipCode</code>.
     */
    public final TableField<NonPaymentsRecord, String> ZIPCODE = createField(DSL.name("zipCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.creatorId</code>.
     */
    public final TableField<NonPaymentsRecord, Long> CREATORID = createField(DSL.name("creatorId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.districtId</code>.
     */
    public final TableField<NonPaymentsRecord, Long> DISTRICTID = createField(DSL.name("districtId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.non_payments.visitId</code>.
     */
    public final TableField<NonPaymentsRecord, Long> VISITID = createField(DSL.name("visitId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>rs-parking-node.non_payments</code> table reference
     */
    public NonPayments() {
        this(DSL.name("non_payments"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.non_payments</code> table reference
     */
    public NonPayments(String alias) {
        this(DSL.name(alias), NON_PAYMENTS);
    }

    /**
     * Create an aliased <code>rs-parking-node.non_payments</code> table reference
     */
    public NonPayments(Name alias) {
        this(alias, NON_PAYMENTS);
    }

    private NonPayments(Name alias, Table<NonPaymentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private NonPayments(Name alias, Table<NonPaymentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> NonPayments(Table<O> child, ForeignKey<O, NonPaymentsRecord> key) {
        super(child, key, NON_PAYMENTS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<NonPaymentsRecord, Long> getIdentity() {
        return Keys.IDENTITY_NON_PAYMENTS;
    }

    @Override
    public UniqueKey<NonPaymentsRecord> getPrimaryKey() {
        return Keys.KEY_NON_PAYMENTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<NonPaymentsRecord>> getKeys() {
        return Arrays.<UniqueKey<NonPaymentsRecord>>asList(Keys.KEY_NON_PAYMENTS_PRIMARY, Keys.KEY_NON_PAYMENTS_UK_L96A1TE44IN473I5TAU0GOHQJ);
    }

    @Override
    public List<ForeignKey<NonPaymentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NonPaymentsRecord, ?>>asList(Keys.FKMDNUHYFG9E46NCHCMBD6ORUGY, Keys.FK7G07PGW1S4EFP6HKEC5FQNLA5, Keys.FKP4HNGADGBPA577G9BRK3P0BGQ);
    }

    public Members members() {
        return new Members(this, Keys.FKMDNUHYFG9E46NCHCMBD6ORUGY);
    }

    public Districts districts() {
        return new Districts(this, Keys.FK7G07PGW1S4EFP6HKEC5FQNLA5);
    }

    public Visits visits() {
        return new Visits(this, Keys.FKP4HNGADGBPA577G9BRK3P0BGQ);
    }

    @Override
    public NonPayments as(String alias) {
        return new NonPayments(DSL.name(alias), this);
    }

    @Override
    public NonPayments as(Name alias) {
        return new NonPayments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NonPayments rename(String name) {
        return new NonPayments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NonPayments rename(Name name) {
        return new NonPayments(name, null);
    }
}
