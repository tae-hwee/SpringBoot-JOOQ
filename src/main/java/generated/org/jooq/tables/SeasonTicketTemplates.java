/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.SeasonTicketTemplatesRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonTicketTemplates extends TableImpl<SeasonTicketTemplatesRecord> {

    private static final long serialVersionUID = 1629058158;

    /**
     * The reference instance of <code>rs-parking-node.season_ticket_templates</code>
     */
    public static final SeasonTicketTemplates SEASON_TICKET_TEMPLATES = new SeasonTicketTemplates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SeasonTicketTemplatesRecord> getRecordType() {
        return SeasonTicketTemplatesRecord.class;
    }

    /**
     * The column <code>rs-parking-node.season_ticket_templates.seasonTicketTemplateId</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Long> SEASONTICKETTEMPLATEID = createField(DSL.name("seasonTicketTemplateId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.bandEnd</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, LocalTime> BANDEND = createField(DSL.name("bandEnd"), org.jooq.impl.SQLDataType.LOCALTIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALTIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.bandStart</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, LocalTime> BANDSTART = createField(DSL.name("bandStart"), org.jooq.impl.SQLDataType.LOCALTIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALTIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.name</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.districtId</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Long> DISTRICTID = createField(DSL.name("districtId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.details</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.finalFee</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, BigDecimal> FINALFEE = createField(DSL.name("finalFee"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.precedingSixHoursBeforeWeekday</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> PRECEDINGSIXHOURSBEFOREWEEKDAY = createField(DSL.name("precedingSixHoursBeforeWeekday"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.weekdayOnly</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> WEEKDAYONLY = createField(DSL.name("weekdayOnly"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.autoRefill</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> AUTOREFILL = createField(DSL.name("autoRefill"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.carryover</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> CARRYOVER = createField(DSL.name("carryover"), org.jooq.impl.SQLDataType.CHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.dropped</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.maxShortCountPerDay</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> MAXSHORTCOUNTPERDAY = createField(DSL.name("maxShortCountPerDay"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.maxShortCountPerMonth</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> MAXSHORTCOUNTPERMONTH = createField(DSL.name("maxShortCountPerMonth"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.maxShortMinutesPerDay</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> MAXSHORTMINUTESPERDAY = createField(DSL.name("maxShortMinutesPerDay"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.maxShortMinutesPerMonth</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> MAXSHORTMINUTESPERMONTH = createField(DSL.name("maxShortMinutesPerMonth"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.maxShortMinutesPerVisit</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> MAXSHORTMINUTESPERVISIT = createField(DSL.name("maxShortMinutesPerVisit"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.specialUsage</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> SPECIALUSAGE = createField(DSL.name("specialUsage"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.timetable</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> TIMETABLE = createField(DSL.name("timetable"), org.jooq.impl.SQLDataType.VARCHAR(2048).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.created</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.lastUpdated</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.umMainPark</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> UMMAINPARK = createField(DSL.name("umMainPark"), org.jooq.impl.SQLDataType.CHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.umParks</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> UMPARKS = createField(DSL.name("umParks"), org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.umid</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.useCountLimit</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Integer> USECOUNTLIMIT = createField(DSL.name("useCountLimit"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.season_ticket_templates.seasonTicketGroupId</code>.
     */
    public final TableField<SeasonTicketTemplatesRecord, Long> SEASONTICKETGROUPID = createField(DSL.name("seasonTicketGroupId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>rs-parking-node.season_ticket_templates</code> table reference
     */
    public SeasonTicketTemplates() {
        this(DSL.name("season_ticket_templates"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_ticket_templates</code> table reference
     */
    public SeasonTicketTemplates(String alias) {
        this(DSL.name(alias), SEASON_TICKET_TEMPLATES);
    }

    /**
     * Create an aliased <code>rs-parking-node.season_ticket_templates</code> table reference
     */
    public SeasonTicketTemplates(Name alias) {
        this(alias, SEASON_TICKET_TEMPLATES);
    }

    private SeasonTicketTemplates(Name alias, Table<SeasonTicketTemplatesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SeasonTicketTemplates(Name alias, Table<SeasonTicketTemplatesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SeasonTicketTemplates(Table<O> child, ForeignKey<O, SeasonTicketTemplatesRecord> key) {
        super(child, key, SEASON_TICKET_TEMPLATES);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<SeasonTicketTemplatesRecord, Long> getIdentity() {
        return Keys.IDENTITY_SEASON_TICKET_TEMPLATES;
    }

    @Override
    public UniqueKey<SeasonTicketTemplatesRecord> getPrimaryKey() {
        return Keys.KEY_SEASON_TICKET_TEMPLATES_PRIMARY;
    }

    @Override
    public List<UniqueKey<SeasonTicketTemplatesRecord>> getKeys() {
        return Arrays.<UniqueKey<SeasonTicketTemplatesRecord>>asList(Keys.KEY_SEASON_TICKET_TEMPLATES_PRIMARY, Keys.KEY_SEASON_TICKET_TEMPLATES_UK_ATK7FV5FXGVM2ILMMSMXQIG9A);
    }

    @Override
    public List<ForeignKey<SeasonTicketTemplatesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SeasonTicketTemplatesRecord, ?>>asList(Keys.FK6XNYFMUJJFBFHS2BE4DUE2JTL);
    }

    public Districts districts() {
        return new Districts(this, Keys.FK6XNYFMUJJFBFHS2BE4DUE2JTL);
    }

    @Override
    public SeasonTicketTemplates as(String alias) {
        return new SeasonTicketTemplates(DSL.name(alias), this);
    }

    @Override
    public SeasonTicketTemplates as(Name alias) {
        return new SeasonTicketTemplates(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTicketTemplates rename(String name) {
        return new SeasonTicketTemplates(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SeasonTicketTemplates rename(Name name) {
        return new SeasonTicketTemplates(name, null);
    }
}
