/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.VisitCouponLinksRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCouponLinks extends TableImpl<VisitCouponLinksRecord> {

    private static final long serialVersionUID = 1246508091;

    /**
     * The reference instance of <code>rs-parking-node.visit_coupon_links</code>
     */
    public static final VisitCouponLinks VISIT_COUPON_LINKS = new VisitCouponLinks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VisitCouponLinksRecord> getRecordType() {
        return VisitCouponLinksRecord.class;
    }

    /**
     * The column <code>rs-parking-node.visit_coupon_links.linkId</code>.
     */
    public final TableField<VisitCouponLinksRecord, Long> LINKID = createField(DSL.name("linkId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.created</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.dropped</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.isUseValid</code>.
     */
    public final TableField<VisitCouponLinksRecord, String> ISUSEVALID = createField(DSL.name("isUseValid"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.lastUpdated</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.linkAuthCode</code>.
     */
    public final TableField<VisitCouponLinksRecord, String> LINKAUTHCODE = createField(DSL.name("linkAuthCode"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.linkAuthCodeCreateRule</code>.
     */
    public final TableField<VisitCouponLinksRecord, String> LINKAUTHCODECREATERULE = createField(DSL.name("linkAuthCodeCreateRule"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.linkAuthCodeCreated</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> LINKAUTHCODECREATED = createField(DSL.name("linkAuthCodeCreated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.linkName</code>.
     */
    public final TableField<VisitCouponLinksRecord, String> LINKNAME = createField(DSL.name("linkName"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.status</code>.
     */
    public final TableField<VisitCouponLinksRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.validEnded</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> VALIDENDED = createField(DSL.name("validEnded"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.validStarted</code>.
     */
    public final TableField<VisitCouponLinksRecord, LocalDateTime> VALIDSTARTED = createField(DSL.name("validStarted"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.lastUpdaterId</code>.
     */
    public final TableField<VisitCouponLinksRecord, Long> LASTUPDATERID = createField(DSL.name("lastUpdaterId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.memberId</code>.
     */
    public final TableField<VisitCouponLinksRecord, Long> MEMBERID = createField(DSL.name("memberId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_links.visitCouponBookId</code>.
     */
    public final TableField<VisitCouponLinksRecord, Long> VISITCOUPONBOOKID = createField(DSL.name("visitCouponBookId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>rs-parking-node.visit_coupon_links</code> table reference
     */
    public VisitCouponLinks() {
        this(DSL.name("visit_coupon_links"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_coupon_links</code> table reference
     */
    public VisitCouponLinks(String alias) {
        this(DSL.name(alias), VISIT_COUPON_LINKS);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_coupon_links</code> table reference
     */
    public VisitCouponLinks(Name alias) {
        this(alias, VISIT_COUPON_LINKS);
    }

    private VisitCouponLinks(Name alias, Table<VisitCouponLinksRecord> aliased) {
        this(alias, aliased, null);
    }

    private VisitCouponLinks(Name alias, Table<VisitCouponLinksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VisitCouponLinks(Table<O> child, ForeignKey<O, VisitCouponLinksRecord> key) {
        super(child, key, VISIT_COUPON_LINKS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<VisitCouponLinksRecord, Long> getIdentity() {
        return Keys.IDENTITY_VISIT_COUPON_LINKS;
    }

    @Override
    public UniqueKey<VisitCouponLinksRecord> getPrimaryKey() {
        return Keys.KEY_VISIT_COUPON_LINKS_PRIMARY;
    }

    @Override
    public List<UniqueKey<VisitCouponLinksRecord>> getKeys() {
        return Arrays.<UniqueKey<VisitCouponLinksRecord>>asList(Keys.KEY_VISIT_COUPON_LINKS_PRIMARY);
    }

    @Override
    public List<ForeignKey<VisitCouponLinksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VisitCouponLinksRecord, ?>>asList(Keys.FKP1G3PQ4QBVL961UIS8NLS18U, Keys.FK5EUTBM4094VJ1U2X45WW9B8A8, Keys.FKPT1M0QTX4DHBG6SLVVTREDHJO);
    }

    public Members fkp1g3pq4qbvl961uis8nls18u() {
        return new Members(this, Keys.FKP1G3PQ4QBVL961UIS8NLS18U);
    }

    public Members fk5eutbm4094vj1u2x45ww9b8a8() {
        return new Members(this, Keys.FK5EUTBM4094VJ1U2X45WW9B8A8);
    }

    public VisitCouponBooks visitCouponBooks() {
        return new VisitCouponBooks(this, Keys.FKPT1M0QTX4DHBG6SLVVTREDHJO);
    }

    @Override
    public VisitCouponLinks as(String alias) {
        return new VisitCouponLinks(DSL.name(alias), this);
    }

    @Override
    public VisitCouponLinks as(Name alias) {
        return new VisitCouponLinks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCouponLinks rename(String name) {
        return new VisitCouponLinks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCouponLinks rename(Name name) {
        return new VisitCouponLinks(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, LocalDateTime, LocalDateTime, String, LocalDateTime, String, String, LocalDateTime, String, String, LocalDateTime, LocalDateTime, Long, Long, Long> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
