/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.PostpaysRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Postpays extends TableImpl<PostpaysRecord> {

    private static final long serialVersionUID = 2063796274;

    /**
     * The reference instance of <code>rs-parking-node.postpays</code>
     */
    public static final Postpays POSTPAYS = new Postpays();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PostpaysRecord> getRecordType() {
        return PostpaysRecord.class;
    }

    /**
     * The column <code>rs-parking-node.postpays.id</code>.
     */
    public final TableField<PostpaysRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.CHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.postpays.amount</code>.
     */
    public final TableField<PostpaysRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.DECIMAL(11, 2).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.postpays.created</code>.
     */
    public final TableField<PostpaysRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.postpays.dropped</code>.
     */
    public final TableField<PostpaysRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.postpays.payed</code>.
     */
    public final TableField<PostpaysRecord, LocalDateTime> PAYED = createField(DSL.name("payed"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.postpays.dropperId</code>.
     */
    public final TableField<PostpaysRecord, Long> DROPPERID = createField(DSL.name("dropperId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.postpays.memberId</code>.
     */
    public final TableField<PostpaysRecord, Long> MEMBERID = createField(DSL.name("memberId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.postpays.payRegisterId</code>.
     */
    public final TableField<PostpaysRecord, Long> PAYREGISTERID = createField(DSL.name("payRegisterId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.postpays.regularVisitId</code>.
     */
    public final TableField<PostpaysRecord, String> REGULARVISITID = createField(DSL.name("regularVisitId"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.postpays.visitCouponId</code>.
     */
    public final TableField<PostpaysRecord, String> VISITCOUPONID = createField(DSL.name("visitCouponId"), org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.postpays</code> table reference
     */
    public Postpays() {
        this(DSL.name("postpays"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.postpays</code> table reference
     */
    public Postpays(String alias) {
        this(DSL.name(alias), POSTPAYS);
    }

    /**
     * Create an aliased <code>rs-parking-node.postpays</code> table reference
     */
    public Postpays(Name alias) {
        this(alias, POSTPAYS);
    }

    private Postpays(Name alias, Table<PostpaysRecord> aliased) {
        this(alias, aliased, null);
    }

    private Postpays(Name alias, Table<PostpaysRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Postpays(Table<O> child, ForeignKey<O, PostpaysRecord> key) {
        super(child, key, POSTPAYS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public UniqueKey<PostpaysRecord> getPrimaryKey() {
        return Keys.KEY_POSTPAYS_PRIMARY;
    }

    @Override
    public List<UniqueKey<PostpaysRecord>> getKeys() {
        return Arrays.<UniqueKey<PostpaysRecord>>asList(Keys.KEY_POSTPAYS_PRIMARY);
    }

    @Override
    public List<ForeignKey<PostpaysRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PostpaysRecord, ?>>asList(Keys.FK16FHEEQB4OV9UNFTTOFNEXEI2, Keys.FKB5W2M7DRW70NLAIXOTW9EAL3U, Keys.FK1O9WK3S55DHHHCPHEBMB6X796, Keys.FKSFR8SBUEIEFFWE79S77UV7RWX, Keys.FKBLF1J0NIMNKMH328LOM6S8ENO);
    }

    public Members fk16fheeqb4ov9unfttofnexei2() {
        return new Members(this, Keys.FK16FHEEQB4OV9UNFTTOFNEXEI2);
    }

    public Members fkb5w2m7drw70nlaixotw9eal3u() {
        return new Members(this, Keys.FKB5W2M7DRW70NLAIXOTW9EAL3U);
    }

    public Members fk1o9wk3s55dhhhcphebmb6x796() {
        return new Members(this, Keys.FK1O9WK3S55DHHHCPHEBMB6X796);
    }

    public RegularVisits regularVisits() {
        return new RegularVisits(this, Keys.FKSFR8SBUEIEFFWE79S77UV7RWX);
    }

    public VisitCoupons visitCoupons() {
        return new VisitCoupons(this, Keys.FKBLF1J0NIMNKMH328LOM6S8ENO);
    }

    @Override
    public Postpays as(String alias) {
        return new Postpays(DSL.name(alias), this);
    }

    @Override
    public Postpays as(Name alias) {
        return new Postpays(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Postpays rename(String name) {
        return new Postpays(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Postpays rename(Name name) {
        return new Postpays(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, BigDecimal, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long, Long, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
