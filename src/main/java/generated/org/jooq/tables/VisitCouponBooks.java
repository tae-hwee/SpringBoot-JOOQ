/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.VisitCouponBooksRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCouponBooks extends TableImpl<VisitCouponBooksRecord> {

    private static final long serialVersionUID = -1438998146;

    /**
     * The reference instance of <code>rs-parking-node.visit_coupon_books</code>
     */
    public static final VisitCouponBooks VISIT_COUPON_BOOKS = new VisitCouponBooks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VisitCouponBooksRecord> getRecordType() {
        return VisitCouponBooksRecord.class;
    }

    /**
     * The column <code>rs-parking-node.visit_coupon_books.visitCouponBookId</code>.
     */
    public final TableField<VisitCouponBooksRecord, Long> VISITCOUPONBOOKID = createField(DSL.name("visitCouponBookId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.created</code>.
     */
    public final TableField<VisitCouponBooksRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.dropped</code>.
     */
    public final TableField<VisitCouponBooksRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.effectivePeriodEnd</code>.
     */
    public final TableField<VisitCouponBooksRecord, LocalDateTime> EFFECTIVEPERIODEND = createField(DSL.name("effectivePeriodEnd"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.effectivePeriodStart</code>.
     */
    public final TableField<VisitCouponBooksRecord, LocalDateTime> EFFECTIVEPERIODSTART = createField(DSL.name("effectivePeriodStart"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.numberOfIssuesPerVisit</code>.
     */
    public final TableField<VisitCouponBooksRecord, Integer> NUMBEROFISSUESPERVISIT = createField(DSL.name("numberOfIssuesPerVisit"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.payed</code>.
     */
    public final TableField<VisitCouponBooksRecord, LocalDateTime> PAYED = createField(DSL.name("payed"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.payedFee</code>.
     */
    public final TableField<VisitCouponBooksRecord, BigDecimal> PAYEDFEE = createField(DSL.name("payedFee"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.paymentType</code>.
     */
    public final TableField<VisitCouponBooksRecord, String> PAYMENTTYPE = createField(DSL.name("paymentType"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.payments</code>.
     */
    public final TableField<VisitCouponBooksRecord, String> PAYMENTS = createField(DSL.name("payments"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.totalNumberOfIssuance</code>.
     */
    public final TableField<VisitCouponBooksRecord, Integer> TOTALNUMBEROFISSUANCE = createField(DSL.name("totalNumberOfIssuance"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.ownerId</code>.
     */
    public final TableField<VisitCouponBooksRecord, Long> OWNERID = createField(DSL.name("ownerId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.visitCouponTemplateId</code>.
     */
    public final TableField<VisitCouponBooksRecord, Long> VISITCOUPONTEMPLATEID = createField(DSL.name("visitCouponTemplateId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.status</code>.
     */
    public final TableField<VisitCouponBooksRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.issuedCount</code>.
     */
    public final TableField<VisitCouponBooksRecord, Integer> ISSUEDCOUNT = createField(DSL.name("issuedCount"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>rs-parking-node.visit_coupon_books.numberOfAutoRefill</code>.
     */
    public final TableField<VisitCouponBooksRecord, Integer> NUMBEROFAUTOREFILL = createField(DSL.name("numberOfAutoRefill"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>rs-parking-node.visit_coupon_books</code> table reference
     */
    public VisitCouponBooks() {
        this(DSL.name("visit_coupon_books"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_coupon_books</code> table reference
     */
    public VisitCouponBooks(String alias) {
        this(DSL.name(alias), VISIT_COUPON_BOOKS);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_coupon_books</code> table reference
     */
    public VisitCouponBooks(Name alias) {
        this(alias, VISIT_COUPON_BOOKS);
    }

    private VisitCouponBooks(Name alias, Table<VisitCouponBooksRecord> aliased) {
        this(alias, aliased, null);
    }

    private VisitCouponBooks(Name alias, Table<VisitCouponBooksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VisitCouponBooks(Table<O> child, ForeignKey<O, VisitCouponBooksRecord> key) {
        super(child, key, VISIT_COUPON_BOOKS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<VisitCouponBooksRecord, Long> getIdentity() {
        return Keys.IDENTITY_VISIT_COUPON_BOOKS;
    }

    @Override
    public UniqueKey<VisitCouponBooksRecord> getPrimaryKey() {
        return Keys.KEY_VISIT_COUPON_BOOKS_PRIMARY;
    }

    @Override
    public List<UniqueKey<VisitCouponBooksRecord>> getKeys() {
        return Arrays.<UniqueKey<VisitCouponBooksRecord>>asList(Keys.KEY_VISIT_COUPON_BOOKS_PRIMARY);
    }

    @Override
    public List<ForeignKey<VisitCouponBooksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VisitCouponBooksRecord, ?>>asList(Keys.FKIV270G5YRQUU6UAO3DXJYF861, Keys.FKRT32R6P310VNBMC7UJS17HDDU);
    }

    public Members members() {
        return new Members(this, Keys.FKIV270G5YRQUU6UAO3DXJYF861);
    }

    public VisitCouponTemplates visitCouponTemplates() {
        return new VisitCouponTemplates(this, Keys.FKRT32R6P310VNBMC7UJS17HDDU);
    }

    @Override
    public VisitCouponBooks as(String alias) {
        return new VisitCouponBooks(DSL.name(alias), this);
    }

    @Override
    public VisitCouponBooks as(Name alias) {
        return new VisitCouponBooks(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCouponBooks rename(String name) {
        return new VisitCouponBooks(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCouponBooks rename(Name name) {
        return new VisitCouponBooks(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Long, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, Integer, LocalDateTime, BigDecimal, String, String, Integer, Long, Long, String, Integer, Integer> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
