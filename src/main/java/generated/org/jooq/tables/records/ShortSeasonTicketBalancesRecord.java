/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.ShortSeasonTicketBalances;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShortSeasonTicketBalancesRecord extends UpdatableRecordImpl<ShortSeasonTicketBalancesRecord> implements Record13<String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, String, Long, Long, Long, String, Integer> {

    private static final long serialVersionUID = 184686985;

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.cancelTarget</code>.
     */
    public void setCanceltarget(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.cancelTarget</code>.
     */
    public String getCanceltarget() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.closed</code>.
     */
    public void setClosed(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.closed</code>.
     */
    public LocalDateTime getClosed() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.discard</code>.
     */
    public void setDiscard(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.discard</code>.
     */
    public LocalDateTime getDiscard() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.minutes</code>.
     */
    public void setMinutes(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.minutes</code>.
     */
    public Integer getMinutes() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.minutesBalance</code>.
     */
    public void setMinutesbalance(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.minutesBalance</code>.
     */
    public Integer getMinutesbalance() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.type</code>.
     */
    public void setType(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.type</code>.
     */
    public String getType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.creatorId</code>.
     */
    public void setCreatorid(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.creatorId</code>.
     */
    public Long getCreatorid() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.memberId</code>.
     */
    public void setMemberid(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.memberId</code>.
     */
    public Long getMemberid() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.seasonTicketTemplateId</code>.
     */
    public void setSeasontickettemplateid(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.seasonTicketTemplateId</code>.
     */
    public Long getSeasontickettemplateid() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.seasonTicketId</code>.
     */
    public void setSeasonticketid(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.seasonTicketId</code>.
     */
    public String getSeasonticketid() {
        return (String) get(11);
    }

    /**
     * Setter for <code>rs-parking-node.short_season_ticket_balances.autoRefillMinutes</code>.
     */
    public void setAutorefillminutes(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>rs-parking-node.short_season_ticket_balances.autoRefillMinutes</code>.
     */
    public Integer getAutorefillminutes() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, String, Long, Long, Long, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, String, LocalDateTime, LocalDateTime, LocalDateTime, Integer, Integer, String, Long, Long, Long, String, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.ID;
    }

    @Override
    public Field<String> field2() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.CANCELTARGET;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.CLOSED;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.CREATED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.DISCARD;
    }

    @Override
    public Field<Integer> field6() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.MINUTES;
    }

    @Override
    public Field<Integer> field7() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.MINUTESBALANCE;
    }

    @Override
    public Field<String> field8() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.TYPE;
    }

    @Override
    public Field<Long> field9() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.CREATORID;
    }

    @Override
    public Field<Long> field10() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.MEMBERID;
    }

    @Override
    public Field<Long> field11() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.SEASONTICKETTEMPLATEID;
    }

    @Override
    public Field<String> field12() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.SEASONTICKETID;
    }

    @Override
    public Field<Integer> field13() {
        return ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES.AUTOREFILLMINUTES;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCanceltarget();
    }

    @Override
    public LocalDateTime component3() {
        return getClosed();
    }

    @Override
    public LocalDateTime component4() {
        return getCreated();
    }

    @Override
    public LocalDateTime component5() {
        return getDiscard();
    }

    @Override
    public Integer component6() {
        return getMinutes();
    }

    @Override
    public Integer component7() {
        return getMinutesbalance();
    }

    @Override
    public String component8() {
        return getType();
    }

    @Override
    public Long component9() {
        return getCreatorid();
    }

    @Override
    public Long component10() {
        return getMemberid();
    }

    @Override
    public Long component11() {
        return getSeasontickettemplateid();
    }

    @Override
    public String component12() {
        return getSeasonticketid();
    }

    @Override
    public Integer component13() {
        return getAutorefillminutes();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCanceltarget();
    }

    @Override
    public LocalDateTime value3() {
        return getClosed();
    }

    @Override
    public LocalDateTime value4() {
        return getCreated();
    }

    @Override
    public LocalDateTime value5() {
        return getDiscard();
    }

    @Override
    public Integer value6() {
        return getMinutes();
    }

    @Override
    public Integer value7() {
        return getMinutesbalance();
    }

    @Override
    public String value8() {
        return getType();
    }

    @Override
    public Long value9() {
        return getCreatorid();
    }

    @Override
    public Long value10() {
        return getMemberid();
    }

    @Override
    public Long value11() {
        return getSeasontickettemplateid();
    }

    @Override
    public String value12() {
        return getSeasonticketid();
    }

    @Override
    public Integer value13() {
        return getAutorefillminutes();
    }

    @Override
    public ShortSeasonTicketBalancesRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value2(String value) {
        setCanceltarget(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value3(LocalDateTime value) {
        setClosed(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value4(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value5(LocalDateTime value) {
        setDiscard(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value6(Integer value) {
        setMinutes(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value7(Integer value) {
        setMinutesbalance(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value8(String value) {
        setType(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value9(Long value) {
        setCreatorid(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value10(Long value) {
        setMemberid(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value11(Long value) {
        setSeasontickettemplateid(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value12(String value) {
        setSeasonticketid(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord value13(Integer value) {
        setAutorefillminutes(value);
        return this;
    }

    @Override
    public ShortSeasonTicketBalancesRecord values(String value1, String value2, LocalDateTime value3, LocalDateTime value4, LocalDateTime value5, Integer value6, Integer value7, String value8, Long value9, Long value10, Long value11, String value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShortSeasonTicketBalancesRecord
     */
    public ShortSeasonTicketBalancesRecord() {
        super(ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES);
    }

    /**
     * Create a detached, initialised ShortSeasonTicketBalancesRecord
     */
    public ShortSeasonTicketBalancesRecord(String id, String canceltarget, LocalDateTime closed, LocalDateTime created, LocalDateTime discard, Integer minutes, Integer minutesbalance, String type, Long creatorid, Long memberid, Long seasontickettemplateid, String seasonticketid, Integer autorefillminutes) {
        super(ShortSeasonTicketBalances.SHORT_SEASON_TICKET_BALANCES);

        set(0, id);
        set(1, canceltarget);
        set(2, closed);
        set(3, created);
        set(4, discard);
        set(5, minutes);
        set(6, minutesbalance);
        set(7, type);
        set(8, creatorid);
        set(9, memberid);
        set(10, seasontickettemplateid);
        set(11, seasonticketid);
        set(12, autorefillminutes);
    }
}
