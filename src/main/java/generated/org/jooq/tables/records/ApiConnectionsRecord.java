/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.ApiConnections;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiConnectionsRecord extends UpdatableRecordImpl<ApiConnectionsRecord> implements Record7<String, String, LocalDateTime, String, String, String, Long> {

    private static final long serialVersionUID = 1737103473;

    /**
     * Setter for <code>rs-parking-node.api_connections.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.active</code>.
     */
    public void setActive(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.active</code>.
     */
    public String getActive() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.guestAuth</code>.
     */
    public void setGuestauth(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.guestAuth</code>.
     */
    public String getGuestauth() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.guestToken</code>.
     */
    public void setGuesttoken(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.guestToken</code>.
     */
    public String getGuesttoken() {
        return (String) get(4);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.nodeToken</code>.
     */
    public void setNodetoken(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.nodeToken</code>.
     */
    public String getNodetoken() {
        return (String) get(5);
    }

    /**
     * Setter for <code>rs-parking-node.api_connections.memberId</code>.
     */
    public void setMemberid(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>rs-parking-node.api_connections.memberId</code>.
     */
    public Long getMemberid() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<String, String, LocalDateTime, String, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<String, String, LocalDateTime, String, String, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ApiConnections.API_CONNECTIONS.ID;
    }

    @Override
    public Field<String> field2() {
        return ApiConnections.API_CONNECTIONS.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ApiConnections.API_CONNECTIONS.CREATED;
    }

    @Override
    public Field<String> field4() {
        return ApiConnections.API_CONNECTIONS.GUESTAUTH;
    }

    @Override
    public Field<String> field5() {
        return ApiConnections.API_CONNECTIONS.GUESTTOKEN;
    }

    @Override
    public Field<String> field6() {
        return ApiConnections.API_CONNECTIONS.NODETOKEN;
    }

    @Override
    public Field<Long> field7() {
        return ApiConnections.API_CONNECTIONS.MEMBERID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getActive();
    }

    @Override
    public LocalDateTime component3() {
        return getCreated();
    }

    @Override
    public String component4() {
        return getGuestauth();
    }

    @Override
    public String component5() {
        return getGuesttoken();
    }

    @Override
    public String component6() {
        return getNodetoken();
    }

    @Override
    public Long component7() {
        return getMemberid();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getActive();
    }

    @Override
    public LocalDateTime value3() {
        return getCreated();
    }

    @Override
    public String value4() {
        return getGuestauth();
    }

    @Override
    public String value5() {
        return getGuesttoken();
    }

    @Override
    public String value6() {
        return getNodetoken();
    }

    @Override
    public Long value7() {
        return getMemberid();
    }

    @Override
    public ApiConnectionsRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value2(String value) {
        setActive(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value3(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value4(String value) {
        setGuestauth(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value5(String value) {
        setGuesttoken(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value6(String value) {
        setNodetoken(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord value7(Long value) {
        setMemberid(value);
        return this;
    }

    @Override
    public ApiConnectionsRecord values(String value1, String value2, LocalDateTime value3, String value4, String value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ApiConnectionsRecord
     */
    public ApiConnectionsRecord() {
        super(ApiConnections.API_CONNECTIONS);
    }

    /**
     * Create a detached, initialised ApiConnectionsRecord
     */
    public ApiConnectionsRecord(String id, String active, LocalDateTime created, String guestauth, String guesttoken, String nodetoken, Long memberid) {
        super(ApiConnections.API_CONNECTIONS);

        set(0, id);
        set(1, active);
        set(2, created);
        set(3, guestauth);
        set(4, guesttoken);
        set(5, nodetoken);
        set(6, memberid);
    }
}
