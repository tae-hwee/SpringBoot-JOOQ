/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.PaymentTickets;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTicketsRecord extends UpdatableRecordImpl<PaymentTicketsRecord> implements Record6<String, LocalDateTime, String, String, LocalDateTime, Long> {

    private static final long serialVersionUID = -1206019012;

    /**
     * Setter for <code>rs-parking-node.payment_tickets.paymentTicketId</code>.
     */
    public void setPaymentticketid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.paymentTicketId</code>.
     */
    public String getPaymentticketid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.payment_tickets.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.payment_tickets.details</code>.
     */
    public void setDetails(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.details</code>.
     */
    public String getDetails() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.payment_tickets.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rs-parking-node.payment_tickets.validUntil</code>.
     */
    public void setValiduntil(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.validUntil</code>.
     */
    public LocalDateTime getValiduntil() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>rs-parking-node.payment_tickets.memberId</code>.
     */
    public void setMemberid(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>rs-parking-node.payment_tickets.memberId</code>.
     */
    public Long getMemberid() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, LocalDateTime, String, String, LocalDateTime, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, LocalDateTime, String, String, LocalDateTime, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PaymentTickets.PAYMENT_TICKETS.PAYMENTTICKETID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PaymentTickets.PAYMENT_TICKETS.CREATED;
    }

    @Override
    public Field<String> field3() {
        return PaymentTickets.PAYMENT_TICKETS.DETAILS;
    }

    @Override
    public Field<String> field4() {
        return PaymentTickets.PAYMENT_TICKETS.TYPE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return PaymentTickets.PAYMENT_TICKETS.VALIDUNTIL;
    }

    @Override
    public Field<Long> field6() {
        return PaymentTickets.PAYMENT_TICKETS.MEMBERID;
    }

    @Override
    public String component1() {
        return getPaymentticketid();
    }

    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    @Override
    public String component3() {
        return getDetails();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public LocalDateTime component5() {
        return getValiduntil();
    }

    @Override
    public Long component6() {
        return getMemberid();
    }

    @Override
    public String value1() {
        return getPaymentticketid();
    }

    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    @Override
    public String value3() {
        return getDetails();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public LocalDateTime value5() {
        return getValiduntil();
    }

    @Override
    public Long value6() {
        return getMemberid();
    }

    @Override
    public PaymentTicketsRecord value1(String value) {
        setPaymentticketid(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord value3(String value) {
        setDetails(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord value4(String value) {
        setType(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord value5(LocalDateTime value) {
        setValiduntil(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord value6(Long value) {
        setMemberid(value);
        return this;
    }

    @Override
    public PaymentTicketsRecord values(String value1, LocalDateTime value2, String value3, String value4, LocalDateTime value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentTicketsRecord
     */
    public PaymentTicketsRecord() {
        super(PaymentTickets.PAYMENT_TICKETS);
    }

    /**
     * Create a detached, initialised PaymentTicketsRecord
     */
    public PaymentTicketsRecord(String paymentticketid, LocalDateTime created, String details, String type, LocalDateTime validuntil, Long memberid) {
        super(PaymentTickets.PAYMENT_TICKETS);

        set(0, paymentticketid);
        set(1, created);
        set(2, details);
        set(3, type);
        set(4, validuntil);
        set(5, memberid);
    }
}
