/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.Blacklists;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlacklistsRecord extends UpdatableRecordImpl<BlacklistsRecord> implements Record10<Long, LocalDateTime, String, String, Long, String, String, LocalDateTime, String, String> {

    private static final long serialVersionUID = -979506140;

    /**
     * Setter for <code>rs-parking-node.blacklists.blacklistId</code>.
     */
    public void setBlacklistid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.blacklistId</code>.
     */
    public Long getBlacklistid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.lpn</code>.
     */
    public void setLpn(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.lpn</code>.
     */
    public String getLpn() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.memo</code>.
     */
    public void setMemo(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.memo</code>.
     */
    public String getMemo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.creatorId</code>.
     */
    public void setCreatorid(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.creatorId</code>.
     */
    public Long getCreatorid() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.apiConnectionId</code>.
     */
    public void setApiconnectionid(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.apiConnectionId</code>.
     */
    public String getApiconnectionid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.aptCode</code>.
     */
    public void setAptcode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.aptCode</code>.
     */
    public String getAptcode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.lastUpdated</code>.
     */
    public void setLastupdated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.lastUpdated</code>.
     */
    public LocalDateTime getLastupdated() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.umid</code>.
     */
    public void setUmid(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.umid</code>.
     */
    public String getUmid() {
        return (String) get(8);
    }

    /**
     * Setter for <code>rs-parking-node.blacklists.details</code>.
     */
    public void setDetails(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>rs-parking-node.blacklists.details</code>.
     */
    public String getDetails() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, LocalDateTime, String, String, Long, String, String, LocalDateTime, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, LocalDateTime, String, String, Long, String, String, LocalDateTime, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Blacklists.BLACKLISTS.BLACKLISTID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Blacklists.BLACKLISTS.CREATED;
    }

    @Override
    public Field<String> field3() {
        return Blacklists.BLACKLISTS.LPN;
    }

    @Override
    public Field<String> field4() {
        return Blacklists.BLACKLISTS.MEMO;
    }

    @Override
    public Field<Long> field5() {
        return Blacklists.BLACKLISTS.CREATORID;
    }

    @Override
    public Field<String> field6() {
        return Blacklists.BLACKLISTS.APICONNECTIONID;
    }

    @Override
    public Field<String> field7() {
        return Blacklists.BLACKLISTS.APTCODE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Blacklists.BLACKLISTS.LASTUPDATED;
    }

    @Override
    public Field<String> field9() {
        return Blacklists.BLACKLISTS.UMID;
    }

    @Override
    public Field<String> field10() {
        return Blacklists.BLACKLISTS.DETAILS;
    }

    @Override
    public Long component1() {
        return getBlacklistid();
    }

    @Override
    public LocalDateTime component2() {
        return getCreated();
    }

    @Override
    public String component3() {
        return getLpn();
    }

    @Override
    public String component4() {
        return getMemo();
    }

    @Override
    public Long component5() {
        return getCreatorid();
    }

    @Override
    public String component6() {
        return getApiconnectionid();
    }

    @Override
    public String component7() {
        return getAptcode();
    }

    @Override
    public LocalDateTime component8() {
        return getLastupdated();
    }

    @Override
    public String component9() {
        return getUmid();
    }

    @Override
    public String component10() {
        return getDetails();
    }

    @Override
    public Long value1() {
        return getBlacklistid();
    }

    @Override
    public LocalDateTime value2() {
        return getCreated();
    }

    @Override
    public String value3() {
        return getLpn();
    }

    @Override
    public String value4() {
        return getMemo();
    }

    @Override
    public Long value5() {
        return getCreatorid();
    }

    @Override
    public String value6() {
        return getApiconnectionid();
    }

    @Override
    public String value7() {
        return getAptcode();
    }

    @Override
    public LocalDateTime value8() {
        return getLastupdated();
    }

    @Override
    public String value9() {
        return getUmid();
    }

    @Override
    public String value10() {
        return getDetails();
    }

    @Override
    public BlacklistsRecord value1(Long value) {
        setBlacklistid(value);
        return this;
    }

    @Override
    public BlacklistsRecord value2(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public BlacklistsRecord value3(String value) {
        setLpn(value);
        return this;
    }

    @Override
    public BlacklistsRecord value4(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public BlacklistsRecord value5(Long value) {
        setCreatorid(value);
        return this;
    }

    @Override
    public BlacklistsRecord value6(String value) {
        setApiconnectionid(value);
        return this;
    }

    @Override
    public BlacklistsRecord value7(String value) {
        setAptcode(value);
        return this;
    }

    @Override
    public BlacklistsRecord value8(LocalDateTime value) {
        setLastupdated(value);
        return this;
    }

    @Override
    public BlacklistsRecord value9(String value) {
        setUmid(value);
        return this;
    }

    @Override
    public BlacklistsRecord value10(String value) {
        setDetails(value);
        return this;
    }

    @Override
    public BlacklistsRecord values(Long value1, LocalDateTime value2, String value3, String value4, Long value5, String value6, String value7, LocalDateTime value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BlacklistsRecord
     */
    public BlacklistsRecord() {
        super(Blacklists.BLACKLISTS);
    }

    /**
     * Create a detached, initialised BlacklistsRecord
     */
    public BlacklistsRecord(Long blacklistid, LocalDateTime created, String lpn, String memo, Long creatorid, String apiconnectionid, String aptcode, LocalDateTime lastupdated, String umid, String details) {
        super(Blacklists.BLACKLISTS);

        set(0, blacklistid);
        set(1, created);
        set(2, lpn);
        set(3, memo);
        set(4, creatorid);
        set(5, apiconnectionid);
        set(6, aptcode);
        set(7, lastupdated);
        set(8, umid);
        set(9, details);
    }
}
