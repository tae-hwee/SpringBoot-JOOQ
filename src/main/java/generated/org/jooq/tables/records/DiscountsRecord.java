/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.Discounts;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiscountsRecord extends UpdatableRecordImpl<DiscountsRecord> implements Record3<Long, String, Long> {

    private static final long serialVersionUID = 708461431;

    /**
     * Setter for <code>rs-parking-node.discounts.discountId</code>.
     */
    public void setDiscountid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.discounts.discountId</code>.
     */
    public Long getDiscountid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.discounts.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.discounts.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.discounts.visitId</code>.
     */
    public void setVisitid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.discounts.visitId</code>.
     */
    public Long getVisitid() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Discounts.DISCOUNTS.DISCOUNTID;
    }

    @Override
    public Field<String> field2() {
        return Discounts.DISCOUNTS.CODE;
    }

    @Override
    public Field<Long> field3() {
        return Discounts.DISCOUNTS.VISITID;
    }

    @Override
    public Long component1() {
        return getDiscountid();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public Long component3() {
        return getVisitid();
    }

    @Override
    public Long value1() {
        return getDiscountid();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public Long value3() {
        return getVisitid();
    }

    @Override
    public DiscountsRecord value1(Long value) {
        setDiscountid(value);
        return this;
    }

    @Override
    public DiscountsRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public DiscountsRecord value3(Long value) {
        setVisitid(value);
        return this;
    }

    @Override
    public DiscountsRecord values(Long value1, String value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiscountsRecord
     */
    public DiscountsRecord() {
        super(Discounts.DISCOUNTS);
    }

    /**
     * Create a detached, initialised DiscountsRecord
     */
    public DiscountsRecord(Long discountid, String code, Long visitid) {
        super(Discounts.DISCOUNTS);

        set(0, discountid);
        set(1, code);
        set(2, visitid);
    }
}
