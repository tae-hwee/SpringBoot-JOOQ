/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.MasterChargePlans;

import java.math.BigDecimal;
import java.time.LocalTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MasterChargePlansRecord extends UpdatableRecordImpl<MasterChargePlansRecord> {

    private static final long serialVersionUID = -1970964592;

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.masterChargePlanId</code>.
     */
    public void setMasterchargeplanid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.masterChargePlanId</code>.
     */
    public Long getMasterchargeplanid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.chargeDeferredInMinutes</code>.
     */
    public void setChargedeferredinminutes(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.chargeDeferredInMinutes</code>.
     */
    public Integer getChargedeferredinminutes() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.chargeFreeInMinutes</code>.
     */
    public void setChargefreeinminutes(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.chargeFreeInMinutes</code>.
     */
    public Integer getChargefreeinminutes() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.cutOff</code>.
     */
    public void setCutoff(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.cutOff</code>.
     */
    public String getCutoff() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.graceInMinutes</code>.
     */
    public void setGraceinminutes(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.graceInMinutes</code>.
     */
    public Integer getGraceinminutes() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.lineUnit</code>.
     */
    public void setLineunit(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.lineUnit</code>.
     */
    public String getLineunit() {
        return (String) get(5);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeePerLine</code>.
     */
    public void setMaxfeeperline(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeePerLine</code>.
     */
    public BigDecimal getMaxfeeperline() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.publicDiscountPlans</code>.
     */
    public void setPublicdiscountplans(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.publicDiscountPlans</code>.
     */
    public String getPublicdiscountplans() {
        return (String) get(7);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.reductionDirection</code>.
     */
    public void setReductiondirection(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.reductionDirection</code>.
     */
    public String getReductiondirection() {
        return (String) get(8);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.weeklyPlans</code>.
     */
    public void setWeeklyplans(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.weeklyPlans</code>.
     */
    public String getWeeklyplans() {
        return (String) get(9);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.districtId</code>.
     */
    public void setDistrictid(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.districtId</code>.
     */
    public Long getDistrictid() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.backwardReduction</code>.
     */
    public void setBackwardreduction(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.backwardReduction</code>.
     */
    public String getBackwardreduction() {
        return (String) get(11);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.discountPlans</code>.
     */
    public void setDiscountplans(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.discountPlans</code>.
     */
    public String getDiscountplans() {
        return (String) get(12);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.setupInMinutes</code>.
     */
    public void setSetupinminutes(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.setupInMinutes</code>.
     */
    public Integer getSetupinminutes() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.couponRegistrationTime</code>.
     */
    public void setCouponregistrationtime(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.couponRegistrationTime</code>.
     */
    public String getCouponregistrationtime() {
        return (String) get(14);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeCompactPerLine</code>.
     */
    public void setMaxfeecompactperline(BigDecimal value) {
        set(15, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeCompactPerLine</code>.
     */
    public BigDecimal getMaxfeecompactperline() {
        return (BigDecimal) get(15);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra1PerLine</code>.
     */
    public void setMaxfeeextra1perline(BigDecimal value) {
        set(16, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra1PerLine</code>.
     */
    public BigDecimal getMaxfeeextra1perline() {
        return (BigDecimal) get(16);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra2PerLine</code>.
     */
    public void setMaxfeeextra2perline(BigDecimal value) {
        set(17, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra2PerLine</code>.
     */
    public BigDecimal getMaxfeeextra2perline() {
        return (BigDecimal) get(17);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra3PerLine</code>.
     */
    public void setMaxfeeextra3perline(BigDecimal value) {
        set(18, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra3PerLine</code>.
     */
    public BigDecimal getMaxfeeextra3perline() {
        return (BigDecimal) get(18);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra4PerLine</code>.
     */
    public void setMaxfeeextra4perline(BigDecimal value) {
        set(19, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra4PerLine</code>.
     */
    public BigDecimal getMaxfeeextra4perline() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra5PerLine</code>.
     */
    public void setMaxfeeextra5perline(BigDecimal value) {
        set(20, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra5PerLine</code>.
     */
    public BigDecimal getMaxfeeextra5perline() {
        return (BigDecimal) get(20);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra6PerLine</code>.
     */
    public void setMaxfeeextra6perline(BigDecimal value) {
        set(21, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra6PerLine</code>.
     */
    public BigDecimal getMaxfeeextra6perline() {
        return (BigDecimal) get(21);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeExtra7PerLine</code>.
     */
    public void setMaxfeeextra7perline(BigDecimal value) {
        set(22, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeExtra7PerLine</code>.
     */
    public BigDecimal getMaxfeeextra7perline() {
        return (BigDecimal) get(22);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeFullSizedLine</code>.
     */
    public void setMaxfeefullsizedline(BigDecimal value) {
        set(23, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeFullSizedLine</code>.
     */
    public BigDecimal getMaxfeefullsizedline() {
        return (BigDecimal) get(23);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxFeeMIdSizedPerLine</code>.
     */
    public void setMaxfeemidsizedperline(BigDecimal value) {
        set(24, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxFeeMIdSizedPerLine</code>.
     */
    public BigDecimal getMaxfeemidsizedperline() {
        return (BigDecimal) get(24);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.chargeFreeInMinutesCarried</code>.
     */
    public void setChargefreeinminutescarried(String value) {
        set(25, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.chargeFreeInMinutesCarried</code>.
     */
    public String getChargefreeinminutescarried() {
        return (String) get(25);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.couponIssueConstraint</code>.
     */
    public void setCouponissueconstraint(String value) {
        set(26, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.couponIssueConstraint</code>.
     */
    public String getCouponissueconstraint() {
        return (String) get(26);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.dayStart</code>.
     */
    public void setDaystart(LocalTime value) {
        set(27, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.dayStart</code>.
     */
    public LocalTime getDaystart() {
        return (LocalTime) get(27);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.name</code>.
     */
    public void setName(String value) {
        set(28, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.name</code>.
     */
    public String getName() {
        return (String) get(28);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.nightStart</code>.
     */
    public void setNightstart(LocalTime value) {
        set(29, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.nightStart</code>.
     */
    public LocalTime getNightstart() {
        return (LocalTime) get(29);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.saturatesBeforeDiscount</code>.
     */
    public void setSaturatesbeforediscount(String value) {
        set(30, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.saturatesBeforeDiscount</code>.
     */
    public String getSaturatesbeforediscount() {
        return (String) get(30);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.takesMinWhenMaxFeeConcurrence</code>.
     */
    public void setTakesminwhenmaxfeeconcurrence(String value) {
        set(31, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.takesMinWhenMaxFeeConcurrence</code>.
     */
    public String getTakesminwhenmaxfeeconcurrence() {
        return (String) get(31);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.type</code>.
     */
    public void setType(String value) {
        set(32, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.type</code>.
     */
    public String getType() {
        return (String) get(32);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.maxChargeFreeCount</code>.
     */
    public void setMaxchargefreecount(Integer value) {
        set(33, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.maxChargeFreeCount</code>.
     */
    public Integer getMaxchargefreecount() {
        return (Integer) get(33);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.planBreak</code>.
     */
    public void setPlanbreak(String value) {
        set(34, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.planBreak</code>.
     */
    public String getPlanbreak() {
        return (String) get(34);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.settleStartWithSeasonTicket</code>.
     */
    public void setSettlestartwithseasonticket(String value) {
        set(35, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.settleStartWithSeasonTicket</code>.
     */
    public String getSettlestartwithseasonticket() {
        return (String) get(35);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.rateAccumulateType</code>.
     */
    public void setRateaccumulatetype(String value) {
        set(36, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.rateAccumulateType</code>.
     */
    public String getRateaccumulatetype() {
        return (String) get(36);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.discountsRateAfterAmount</code>.
     */
    public void setDiscountsrateafteramount(String value) {
        set(37, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.discountsRateAfterAmount</code>.
     */
    public String getDiscountsrateafteramount() {
        return (String) get(37);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.weekendDayStart</code>.
     */
    public void setWeekenddaystart(LocalTime value) {
        set(38, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.weekendDayStart</code>.
     */
    public LocalTime getWeekenddaystart() {
        return (LocalTime) get(38);
    }

    /**
     * Setter for <code>rs-parking-node.master_charge_plans.weekendNightStart</code>.
     */
    public void setWeekendnightstart(LocalTime value) {
        set(39, value);
    }

    /**
     * Getter for <code>rs-parking-node.master_charge_plans.weekendNightStart</code>.
     */
    public LocalTime getWeekendnightstart() {
        return (LocalTime) get(39);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MasterChargePlansRecord
     */
    public MasterChargePlansRecord() {
        super(MasterChargePlans.MASTER_CHARGE_PLANS);
    }

    /**
     * Create a detached, initialised MasterChargePlansRecord
     */
    public MasterChargePlansRecord(Long masterchargeplanid, Integer chargedeferredinminutes, Integer chargefreeinminutes, String cutoff, Integer graceinminutes, String lineunit, BigDecimal maxfeeperline, String publicdiscountplans, String reductiondirection, String weeklyplans, Long districtid, String backwardreduction, String discountplans, Integer setupinminutes, String couponregistrationtime, BigDecimal maxfeecompactperline, BigDecimal maxfeeextra1perline, BigDecimal maxfeeextra2perline, BigDecimal maxfeeextra3perline, BigDecimal maxfeeextra4perline, BigDecimal maxfeeextra5perline, BigDecimal maxfeeextra6perline, BigDecimal maxfeeextra7perline, BigDecimal maxfeefullsizedline, BigDecimal maxfeemidsizedperline, String chargefreeinminutescarried, String couponissueconstraint, LocalTime daystart, String name, LocalTime nightstart, String saturatesbeforediscount, String takesminwhenmaxfeeconcurrence, String type, Integer maxchargefreecount, String planbreak, String settlestartwithseasonticket, String rateaccumulatetype, String discountsrateafteramount, LocalTime weekenddaystart, LocalTime weekendnightstart) {
        super(MasterChargePlans.MASTER_CHARGE_PLANS);

        set(0, masterchargeplanid);
        set(1, chargedeferredinminutes);
        set(2, chargefreeinminutes);
        set(3, cutoff);
        set(4, graceinminutes);
        set(5, lineunit);
        set(6, maxfeeperline);
        set(7, publicdiscountplans);
        set(8, reductiondirection);
        set(9, weeklyplans);
        set(10, districtid);
        set(11, backwardreduction);
        set(12, discountplans);
        set(13, setupinminutes);
        set(14, couponregistrationtime);
        set(15, maxfeecompactperline);
        set(16, maxfeeextra1perline);
        set(17, maxfeeextra2perline);
        set(18, maxfeeextra3perline);
        set(19, maxfeeextra4perline);
        set(20, maxfeeextra5perline);
        set(21, maxfeeextra6perline);
        set(22, maxfeeextra7perline);
        set(23, maxfeefullsizedline);
        set(24, maxfeemidsizedperline);
        set(25, chargefreeinminutescarried);
        set(26, couponissueconstraint);
        set(27, daystart);
        set(28, name);
        set(29, nightstart);
        set(30, saturatesbeforediscount);
        set(31, takesminwhenmaxfeeconcurrence);
        set(32, type);
        set(33, maxchargefreecount);
        set(34, planbreak);
        set(35, settlestartwithseasonticket);
        set(36, rateaccumulatetype);
        set(37, discountsrateafteramount);
        set(38, weekenddaystart);
        set(39, weekendnightstart);
    }
}
