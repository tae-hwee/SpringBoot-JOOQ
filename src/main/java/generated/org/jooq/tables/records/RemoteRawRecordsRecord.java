/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.RemoteRawRecords;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RemoteRawRecordsRecord extends UpdatableRecordImpl<RemoteRawRecordsRecord> implements Record4<String, String, String, LocalDateTime> {

    private static final long serialVersionUID = 2009488650;

    /**
     * Setter for <code>rs-parking-node.remote_raw_records.entityId</code>.
     */
    public void setEntityid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.remote_raw_records.entityId</code>.
     */
    public String getEntityid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.remote_raw_records.entityType</code>.
     */
    public void setEntitytype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.remote_raw_records.entityType</code>.
     */
    public String getEntitytype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.remote_raw_records.data</code>.
     */
    public void setData(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.remote_raw_records.data</code>.
     */
    public String getData() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.remote_raw_records.saved</code>.
     */
    public void setSaved(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.remote_raw_records.saved</code>.
     */
    public LocalDateTime getSaved() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RemoteRawRecords.REMOTE_RAW_RECORDS.ENTITYID;
    }

    @Override
    public Field<String> field2() {
        return RemoteRawRecords.REMOTE_RAW_RECORDS.ENTITYTYPE;
    }

    @Override
    public Field<String> field3() {
        return RemoteRawRecords.REMOTE_RAW_RECORDS.DATA;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return RemoteRawRecords.REMOTE_RAW_RECORDS.SAVED;
    }

    @Override
    public String component1() {
        return getEntityid();
    }

    @Override
    public String component2() {
        return getEntitytype();
    }

    @Override
    public String component3() {
        return getData();
    }

    @Override
    public LocalDateTime component4() {
        return getSaved();
    }

    @Override
    public String value1() {
        return getEntityid();
    }

    @Override
    public String value2() {
        return getEntitytype();
    }

    @Override
    public String value3() {
        return getData();
    }

    @Override
    public LocalDateTime value4() {
        return getSaved();
    }

    @Override
    public RemoteRawRecordsRecord value1(String value) {
        setEntityid(value);
        return this;
    }

    @Override
    public RemoteRawRecordsRecord value2(String value) {
        setEntitytype(value);
        return this;
    }

    @Override
    public RemoteRawRecordsRecord value3(String value) {
        setData(value);
        return this;
    }

    @Override
    public RemoteRawRecordsRecord value4(LocalDateTime value) {
        setSaved(value);
        return this;
    }

    @Override
    public RemoteRawRecordsRecord values(String value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RemoteRawRecordsRecord
     */
    public RemoteRawRecordsRecord() {
        super(RemoteRawRecords.REMOTE_RAW_RECORDS);
    }

    /**
     * Create a detached, initialised RemoteRawRecordsRecord
     */
    public RemoteRawRecordsRecord(String entityid, String entitytype, String data, LocalDateTime saved) {
        super(RemoteRawRecords.REMOTE_RAW_RECORDS);

        set(0, entityid);
        set(1, entitytype);
        set(2, data);
        set(3, saved);
    }
}
