/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.Patientcar;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientcarRecord extends UpdatableRecordImpl<PatientcarRecord> implements Record4<Long, String, String, LocalDateTime> {

    private static final long serialVersionUID = 47255665;

    /**
     * Setter for <code>rs-parking-node.patientcar.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.patientcar.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.patientcar.lpn</code>.
     */
    public void setLpn(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.patientcar.lpn</code>.
     */
    public String getLpn() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.patientcar.patientId</code>.
     */
    public void setPatientid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.patientcar.patientId</code>.
     */
    public String getPatientid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.patientcar.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.patientcar.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Patientcar.PATIENTCAR.ID;
    }

    @Override
    public Field<String> field2() {
        return Patientcar.PATIENTCAR.LPN;
    }

    @Override
    public Field<String> field3() {
        return Patientcar.PATIENTCAR.PATIENTID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Patientcar.PATIENTCAR.UPDATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLpn();
    }

    @Override
    public String component3() {
        return getPatientid();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLpn();
    }

    @Override
    public String value3() {
        return getPatientid();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdated();
    }

    @Override
    public PatientcarRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PatientcarRecord value2(String value) {
        setLpn(value);
        return this;
    }

    @Override
    public PatientcarRecord value3(String value) {
        setPatientid(value);
        return this;
    }

    @Override
    public PatientcarRecord value4(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public PatientcarRecord values(Long value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PatientcarRecord
     */
    public PatientcarRecord() {
        super(Patientcar.PATIENTCAR);
    }

    /**
     * Create a detached, initialised PatientcarRecord
     */
    public PatientcarRecord(Long id, String lpn, String patientid, LocalDateTime updated) {
        super(Patientcar.PATIENTCAR);

        set(0, id);
        set(1, lpn);
        set(2, patientid);
        set(3, updated);
    }
}
