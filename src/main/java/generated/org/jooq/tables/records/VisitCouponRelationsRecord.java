/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables.records;


import generated.org.jooq.tables.VisitCouponRelations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCouponRelationsRecord extends UpdatableRecordImpl<VisitCouponRelationsRecord> implements Record4<Long, Integer, Long, Integer> {

    private static final long serialVersionUID = -139915528;

    /**
     * Setter for <code>rs-parking-node.visit_coupon_relations.visitCouponRelationId</code>.
     */
    public void setVisitcouponrelationid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>rs-parking-node.visit_coupon_relations.visitCouponRelationId</code>.
     */
    public Long getVisitcouponrelationid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>rs-parking-node.visit_coupon_relations.numberOfIssuesPerVisit</code>.
     */
    public void setNumberofissuespervisit(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rs-parking-node.visit_coupon_relations.numberOfIssuesPerVisit</code>.
     */
    public Integer getNumberofissuespervisit() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rs-parking-node.visit_coupon_relations.memberId</code>.
     */
    public void setMemberid(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>rs-parking-node.visit_coupon_relations.memberId</code>.
     */
    public Long getMemberid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>rs-parking-node.visit_coupon_relations.totalMinutesPerVisit</code>.
     */
    public void setTotalminutespervisit(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>rs-parking-node.visit_coupon_relations.totalMinutesPerVisit</code>.
     */
    public Integer getTotalminutespervisit() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, Long, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, Long, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return VisitCouponRelations.VISIT_COUPON_RELATIONS.VISITCOUPONRELATIONID;
    }

    @Override
    public Field<Integer> field2() {
        return VisitCouponRelations.VISIT_COUPON_RELATIONS.NUMBEROFISSUESPERVISIT;
    }

    @Override
    public Field<Long> field3() {
        return VisitCouponRelations.VISIT_COUPON_RELATIONS.MEMBERID;
    }

    @Override
    public Field<Integer> field4() {
        return VisitCouponRelations.VISIT_COUPON_RELATIONS.TOTALMINUTESPERVISIT;
    }

    @Override
    public Long component1() {
        return getVisitcouponrelationid();
    }

    @Override
    public Integer component2() {
        return getNumberofissuespervisit();
    }

    @Override
    public Long component3() {
        return getMemberid();
    }

    @Override
    public Integer component4() {
        return getTotalminutespervisit();
    }

    @Override
    public Long value1() {
        return getVisitcouponrelationid();
    }

    @Override
    public Integer value2() {
        return getNumberofissuespervisit();
    }

    @Override
    public Long value3() {
        return getMemberid();
    }

    @Override
    public Integer value4() {
        return getTotalminutespervisit();
    }

    @Override
    public VisitCouponRelationsRecord value1(Long value) {
        setVisitcouponrelationid(value);
        return this;
    }

    @Override
    public VisitCouponRelationsRecord value2(Integer value) {
        setNumberofissuespervisit(value);
        return this;
    }

    @Override
    public VisitCouponRelationsRecord value3(Long value) {
        setMemberid(value);
        return this;
    }

    @Override
    public VisitCouponRelationsRecord value4(Integer value) {
        setTotalminutespervisit(value);
        return this;
    }

    @Override
    public VisitCouponRelationsRecord values(Long value1, Integer value2, Long value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VisitCouponRelationsRecord
     */
    public VisitCouponRelationsRecord() {
        super(VisitCouponRelations.VISIT_COUPON_RELATIONS);
    }

    /**
     * Create a detached, initialised VisitCouponRelationsRecord
     */
    public VisitCouponRelationsRecord(Long visitcouponrelationid, Integer numberofissuespervisit, Long memberid, Integer totalminutespervisit) {
        super(VisitCouponRelations.VISIT_COUPON_RELATIONS);

        set(0, visitcouponrelationid);
        set(1, numberofissuespervisit);
        set(2, memberid);
        set(3, totalminutespervisit);
    }
}
