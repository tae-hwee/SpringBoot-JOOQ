/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.VisitPaymentsRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitPayments extends TableImpl<VisitPaymentsRecord> {

    private static final long serialVersionUID = 1862758638;

    /**
     * The reference instance of <code>rs-parking-node.visit_payments</code>
     */
    public static final VisitPayments VISIT_PAYMENTS = new VisitPayments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VisitPaymentsRecord> getRecordType() {
        return VisitPaymentsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.visit_payments.visitPaymentId</code>.
     */
    public final TableField<VisitPaymentsRecord, String> VISITPAYMENTID = createField(DSL.name("visitPaymentId"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.amount</code>.
     */
    public final TableField<VisitPaymentsRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.authCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> AUTHCODE = createField(DSL.name("authCode"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.authDate</code>.
     */
    public final TableField<VisitPaymentsRecord, String> AUTHDATE = createField(DSL.name("authDate"), org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.authTime</code>.
     */
    public final TableField<VisitPaymentsRecord, String> AUTHTIME = createField(DSL.name("authTime"), org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.buyer</code>.
     */
    public final TableField<VisitPaymentsRecord, String> BUYER = createField(DSL.name("buyer"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.buyerCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> BUYERCODE = createField(DSL.name("buyerCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.cancel</code>.
     */
    public final TableField<VisitPaymentsRecord, String> CANCEL = createField(DSL.name("cancel"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.cardNo</code>.
     */
    public final TableField<VisitPaymentsRecord, String> CARDNO = createField(DSL.name("cardNo"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.code</code>.
     */
    public final TableField<VisitPaymentsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.created</code>.
     */
    public final TableField<VisitPaymentsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.deviceCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> DEVICECODE = createField(DSL.name("deviceCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.deviceNumber</code>.
     */
    public final TableField<VisitPaymentsRecord, String> DEVICENUMBER = createField(DSL.name("deviceNumber"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.franchiseCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> FRANCHISECODE = createField(DSL.name("franchiseCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.installment</code>.
     */
    public final TableField<VisitPaymentsRecord, String> INSTALLMENT = createField(DSL.name("installment"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.issuer</code>.
     */
    public final TableField<VisitPaymentsRecord, String> ISSUER = createField(DSL.name("issuer"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.issuerCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> ISSUERCODE = createField(DSL.name("issuerCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.machineCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> MACHINECODE = createField(DSL.name("machineCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.message1</code>.
     */
    public final TableField<VisitPaymentsRecord, String> MESSAGE1 = createField(DSL.name("message1"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.message2</code>.
     */
    public final TableField<VisitPaymentsRecord, String> MESSAGE2 = createField(DSL.name("message2"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.paymentType</code>.
     */
    public final TableField<VisitPaymentsRecord, String> PAYMENTTYPE = createField(DSL.name("paymentType"), org.jooq.impl.SQLDataType.VARCHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.resCode</code>.
     */
    public final TableField<VisitPaymentsRecord, String> RESCODE = createField(DSL.name("resCode"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.service</code>.
     */
    public final TableField<VisitPaymentsRecord, BigDecimal> SERVICE = createField(DSL.name("service"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.updated</code>.
     */
    public final TableField<VisitPaymentsRecord, LocalDateTime> UPDATED = createField(DSL.name("updated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.vat</code>.
     */
    public final TableField<VisitPaymentsRecord, BigDecimal> VAT = createField(DSL.name("vat"), org.jooq.impl.SQLDataType.DECIMAL(19, 2).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.visitId</code>.
     */
    public final TableField<VisitPaymentsRecord, Long> VISITID = createField(DSL.name("visitId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.dailyNo</code>.
     */
    public final TableField<VisitPaymentsRecord, Long> DAILYNO = createField(DSL.name("dailyNo"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.category</code>.
     */
    public final TableField<VisitPaymentsRecord, String> CATEGORY = createField(DSL.name("category"), org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.visit_payments.tid</code>.
     */
    public final TableField<VisitPaymentsRecord, String> TID = createField(DSL.name("tid"), org.jooq.impl.SQLDataType.VARCHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.visit_payments</code> table reference
     */
    public VisitPayments() {
        this(DSL.name("visit_payments"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_payments</code> table reference
     */
    public VisitPayments(String alias) {
        this(DSL.name(alias), VISIT_PAYMENTS);
    }

    /**
     * Create an aliased <code>rs-parking-node.visit_payments</code> table reference
     */
    public VisitPayments(Name alias) {
        this(alias, VISIT_PAYMENTS);
    }

    private VisitPayments(Name alias, Table<VisitPaymentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private VisitPayments(Name alias, Table<VisitPaymentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> VisitPayments(Table<O> child, ForeignKey<O, VisitPaymentsRecord> key) {
        super(child, key, VISIT_PAYMENTS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public UniqueKey<VisitPaymentsRecord> getPrimaryKey() {
        return Keys.KEY_VISIT_PAYMENTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<VisitPaymentsRecord>> getKeys() {
        return Arrays.<UniqueKey<VisitPaymentsRecord>>asList(Keys.KEY_VISIT_PAYMENTS_PRIMARY);
    }

    @Override
    public List<ForeignKey<VisitPaymentsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VisitPaymentsRecord, ?>>asList(Keys.FK95SD8BPHCECQD81QV0HSO2KBQ);
    }

    public Visits visits() {
        return new Visits(this, Keys.FK95SD8BPHCECQD81QV0HSO2KBQ);
    }

    @Override
    public VisitPayments as(String alias) {
        return new VisitPayments(DSL.name(alias), this);
    }

    @Override
    public VisitPayments as(Name alias) {
        return new VisitPayments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitPayments rename(String name) {
        return new VisitPayments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitPayments rename(Name name) {
        return new VisitPayments(name, null);
    }
}
