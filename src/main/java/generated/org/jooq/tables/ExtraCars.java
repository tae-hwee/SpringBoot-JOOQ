/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.ExtraCarsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExtraCars extends TableImpl<ExtraCarsRecord> {

    private static final long serialVersionUID = 1019507996;

    /**
     * The reference instance of <code>rs-parking-node.extra_cars</code>
     */
    public static final ExtraCars EXTRA_CARS = new ExtraCars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExtraCarsRecord> getRecordType() {
        return ExtraCarsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.extra_cars.id</code>.
     */
    public final TableField<ExtraCarsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.extra_cars.created</code>.
     */
    public final TableField<ExtraCarsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.extra_cars.lpn</code>.
     */
    public final TableField<ExtraCarsRecord, String> LPN = createField(DSL.name("lpn"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.extra_cars.memo</code>.
     */
    public final TableField<ExtraCarsRecord, String> MEMO = createField(DSL.name("memo"), org.jooq.impl.SQLDataType.VARCHAR(512).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.extra_cars.suspended</code>.
     */
    public final TableField<ExtraCarsRecord, String> SUSPENDED = createField(DSL.name("suspended"), org.jooq.impl.SQLDataType.VARCHAR(1).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.extra_cars</code> table reference
     */
    public ExtraCars() {
        this(DSL.name("extra_cars"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.extra_cars</code> table reference
     */
    public ExtraCars(String alias) {
        this(DSL.name(alias), EXTRA_CARS);
    }

    /**
     * Create an aliased <code>rs-parking-node.extra_cars</code> table reference
     */
    public ExtraCars(Name alias) {
        this(alias, EXTRA_CARS);
    }

    private ExtraCars(Name alias, Table<ExtraCarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExtraCars(Name alias, Table<ExtraCarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ExtraCars(Table<O> child, ForeignKey<O, ExtraCarsRecord> key) {
        super(child, key, EXTRA_CARS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<ExtraCarsRecord, Long> getIdentity() {
        return Keys.IDENTITY_EXTRA_CARS;
    }

    @Override
    public UniqueKey<ExtraCarsRecord> getPrimaryKey() {
        return Keys.KEY_EXTRA_CARS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ExtraCarsRecord>> getKeys() {
        return Arrays.<UniqueKey<ExtraCarsRecord>>asList(Keys.KEY_EXTRA_CARS_PRIMARY);
    }

    @Override
    public ExtraCars as(String alias) {
        return new ExtraCars(DSL.name(alias), this);
    }

    @Override
    public ExtraCars as(Name alias) {
        return new ExtraCars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ExtraCars rename(String name) {
        return new ExtraCars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ExtraCars rename(Name name) {
        return new ExtraCars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
