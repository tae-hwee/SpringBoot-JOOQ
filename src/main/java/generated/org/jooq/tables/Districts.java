/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.DistrictsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Districts extends TableImpl<DistrictsRecord> {

    private static final long serialVersionUID = 907829346;

    /**
     * The reference instance of <code>rs-parking-node.districts</code>
     */
    public static final Districts DISTRICTS = new Districts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DistrictsRecord> getRecordType() {
        return DistrictsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.districts.districtId</code>.
     */
    public final TableField<DistrictsRecord, Long> DISTRICTID = createField(DSL.name("districtId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityEconomyCarOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYECONOMYCARONLY = createField(DSL.name("capacityEconomyCarOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityElectricCarOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYELECTRICCARONLY = createField(DSL.name("capacityElectricCarOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityExclusive</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYEXCLUSIVE = createField(DSL.name("capacityExclusive"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityExtra</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYEXTRA = createField(DSL.name("capacityExtra"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityImpairedOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYIMPAIREDONLY = createField(DSL.name("capacityImpairedOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityLadyFirst</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYLADYFIRST = createField(DSL.name("capacityLadyFirst"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityNormal</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYNORMAL = createField(DSL.name("capacityNormal"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityTwoWheeledOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYTWOWHEELEDONLY = createField(DSL.name("capacityTwoWheeledOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.dropped</code>.
     */
    public final TableField<DistrictsRecord, LocalDateTime> DROPPED = createField(DSL.name("dropped"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.districts.name</code>.
     */
    public final TableField<DistrictsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyEconomyCarOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYECONOMYCARONLY = createField(DSL.name("occupancyEconomyCarOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyelectricCarOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYELECTRICCARONLY = createField(DSL.name("occupancyelectricCarOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyExclusive</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYEXCLUSIVE = createField(DSL.name("occupancyExclusive"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyExtra</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYEXTRA = createField(DSL.name("occupancyExtra"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyImpairedOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYIMPAIREDONLY = createField(DSL.name("occupancyImpairedOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyLadyFirst</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYLADYFIRST = createField(DSL.name("occupancyLadyFirst"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyNormal</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYNORMAL = createField(DSL.name("occupancyNormal"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyTwoWheeledOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYTWOWHEELEDONLY = createField(DSL.name("occupancyTwoWheeledOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.chargeEngine</code>.
     */
    public final TableField<DistrictsRecord, String> CHARGEENGINE = createField(DSL.name("chargeEngine"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.chargeScript</code>.
     */
    public final TableField<DistrictsRecord, String> CHARGESCRIPT = createField(DSL.name("chargeScript"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.districts.code</code>.
     */
    public final TableField<DistrictsRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.private_key</code>.
     */
    public final TableField<DistrictsRecord, String> PRIVATE_KEY = createField(DSL.name("private_key"), org.jooq.impl.SQLDataType.VARCHAR(4096).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.districts.public_key</code>.
     */
    public final TableField<DistrictsRecord, String> PUBLIC_KEY = createField(DSL.name("public_key"), org.jooq.impl.SQLDataType.VARCHAR(1024).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.districts.anonyEstimatable</code>.
     */
    public final TableField<DistrictsRecord, String> ANONYESTIMATABLE = createField(DSL.name("anonyEstimatable"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.dropperId</code>.
     */
    public final TableField<DistrictsRecord, Long> DROPPERID = createField(DSL.name("dropperId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.districts.details</code>.
     */
    public final TableField<DistrictsRecord, String> DETAILS = createField(DSL.name("details"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rs-parking-node.districts.capacityFullSizeOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> CAPACITYFULLSIZEONLY = createField(DSL.name("capacityFullSizeOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.occupancyFullSizeOnly</code>.
     */
    public final TableField<DistrictsRecord, Integer> OCCUPANCYFULLSIZEONLY = createField(DSL.name("occupancyFullSizeOnly"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.districts.created</code>.
     */
    public final TableField<DistrictsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.districts.lastUpdated</code>.
     */
    public final TableField<DistrictsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.districts.umid</code>.
     */
    public final TableField<DistrictsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(8).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>rs-parking-node.districts.payDetails</code>.
     */
    public final TableField<DistrictsRecord, String> PAYDETAILS = createField(DSL.name("payDetails"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>rs-parking-node.districts</code> table reference
     */
    public Districts() {
        this(DSL.name("districts"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.districts</code> table reference
     */
    public Districts(String alias) {
        this(DSL.name(alias), DISTRICTS);
    }

    /**
     * Create an aliased <code>rs-parking-node.districts</code> table reference
     */
    public Districts(Name alias) {
        this(alias, DISTRICTS);
    }

    private Districts(Name alias, Table<DistrictsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Districts(Name alias, Table<DistrictsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Districts(Table<O> child, ForeignKey<O, DistrictsRecord> key) {
        super(child, key, DISTRICTS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<DistrictsRecord, Long> getIdentity() {
        return Keys.IDENTITY_DISTRICTS;
    }

    @Override
    public UniqueKey<DistrictsRecord> getPrimaryKey() {
        return Keys.KEY_DISTRICTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<DistrictsRecord>> getKeys() {
        return Arrays.<UniqueKey<DistrictsRecord>>asList(Keys.KEY_DISTRICTS_PRIMARY, Keys.KEY_DISTRICTS_UK_GKPVB55AIIYU9N55QOXCWMKDS, Keys.KEY_DISTRICTS_UK_I9DXSO6NU5FDPXR17H0YV4V2T);
    }

    @Override
    public List<ForeignKey<DistrictsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DistrictsRecord, ?>>asList(Keys.FKA8Y3QDSDR5VOYKB2WNLYNCBJH);
    }

    public Members members() {
        return new Members(this, Keys.FKA8Y3QDSDR5VOYKB2WNLYNCBJH);
    }

    @Override
    public Districts as(String alias) {
        return new Districts(DSL.name(alias), this);
    }

    @Override
    public Districts as(Name alias) {
        return new Districts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Districts rename(String name) {
        return new Districts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Districts rename(Name name) {
        return new Districts(name, null);
    }
}
