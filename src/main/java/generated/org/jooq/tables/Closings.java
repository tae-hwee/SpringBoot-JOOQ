/*
 * This file is generated by jOOQ.
 */
package generated.org.jooq.tables;


import generated.org.jooq.Keys;
import generated.org.jooq.RsParkingNode;
import generated.org.jooq.tables.records.ClosingsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Closings extends TableImpl<ClosingsRecord> {

    private static final long serialVersionUID = -1933503327;

    /**
     * The reference instance of <code>rs-parking-node.closings</code>
     */
    public static final Closings CLOSINGS = new Closings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClosingsRecord> getRecordType() {
        return ClosingsRecord.class;
    }

    /**
     * The column <code>rs-parking-node.closings.closingId</code>.
     */
    public final TableField<ClosingsRecord, Long> CLOSINGID = createField(DSL.name("closingId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>rs-parking-node.closings.start</code>.
     */
    public final TableField<ClosingsRecord, LocalDateTime> START = createField(DSL.name("start"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.closings.end</code>.
     */
    public final TableField<ClosingsRecord, LocalDateTime> END = createField(DSL.name("end"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.closings.summary</code>.
     */
    public final TableField<ClosingsRecord, String> SUMMARY = createField(DSL.name("summary"), org.jooq.impl.SQLDataType.VARCHAR(2048).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>rs-parking-node.closings.districtId</code>.
     */
    public final TableField<ClosingsRecord, Long> DISTRICTID = createField(DSL.name("districtId"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.closings.machinePayId</code>.
     */
    public final TableField<ClosingsRecord, Long> MACHINEPAYID = createField(DSL.name("machinePayId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.closings.created</code>.
     */
    public final TableField<ClosingsRecord, LocalDateTime> CREATED = createField(DSL.name("created"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rs-parking-node.closings.creatorId</code>.
     */
    public final TableField<ClosingsRecord, Long> CREATORID = createField(DSL.name("creatorId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.closings.attendanceId</code>.
     */
    public final TableField<ClosingsRecord, Long> ATTENDANCEID = createField(DSL.name("attendanceId"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rs-parking-node.closings.lastUpdated</code>.
     */
    public final TableField<ClosingsRecord, LocalDateTime> LASTUPDATED = createField(DSL.name("lastUpdated"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>rs-parking-node.closings.umid</code>.
     */
    public final TableField<ClosingsRecord, String> UMID = createField(DSL.name("umid"), org.jooq.impl.SQLDataType.CHAR(32).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * Create a <code>rs-parking-node.closings</code> table reference
     */
    public Closings() {
        this(DSL.name("closings"), null);
    }

    /**
     * Create an aliased <code>rs-parking-node.closings</code> table reference
     */
    public Closings(String alias) {
        this(DSL.name(alias), CLOSINGS);
    }

    /**
     * Create an aliased <code>rs-parking-node.closings</code> table reference
     */
    public Closings(Name alias) {
        this(alias, CLOSINGS);
    }

    private Closings(Name alias, Table<ClosingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Closings(Name alias, Table<ClosingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Closings(Table<O> child, ForeignKey<O, ClosingsRecord> key) {
        super(child, key, CLOSINGS);
    }

    @Override
    public Schema getSchema() {
        return RsParkingNode.RS_PARKING_NODE;
    }

    @Override
    public Identity<ClosingsRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLOSINGS;
    }

    @Override
    public UniqueKey<ClosingsRecord> getPrimaryKey() {
        return Keys.KEY_CLOSINGS_PRIMARY;
    }

    @Override
    public List<UniqueKey<ClosingsRecord>> getKeys() {
        return Arrays.<UniqueKey<ClosingsRecord>>asList(Keys.KEY_CLOSINGS_PRIMARY, Keys.KEY_CLOSINGS_UK_SNMBAYVVI5VJLF1OFHAP89HTM);
    }

    @Override
    public List<ForeignKey<ClosingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClosingsRecord, ?>>asList(Keys.FKLXKSM33C7SJLEM8L5QLW5SIT, Keys.FK61PLWFTU5AW3BYXG8GQGVSJU1, Keys.FKL4NKKFOOOETOSHUESNUATDOOQ, Keys.FKPC2U2S7YBR03FOO73M224GJ2F);
    }

    public Districts districts() {
        return new Districts(this, Keys.FKLXKSM33C7SJLEM8L5QLW5SIT);
    }

    public Machines machines() {
        return new Machines(this, Keys.FK61PLWFTU5AW3BYXG8GQGVSJU1);
    }

    public Members members() {
        return new Members(this, Keys.FKL4NKKFOOOETOSHUESNUATDOOQ);
    }

    public Attendances attendances() {
        return new Attendances(this, Keys.FKPC2U2S7YBR03FOO73M224GJ2F);
    }

    @Override
    public Closings as(String alias) {
        return new Closings(DSL.name(alias), this);
    }

    @Override
    public Closings as(Name alias) {
        return new Closings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Closings rename(String name) {
        return new Closings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Closings rename(Name name) {
        return new Closings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, LocalDateTime, LocalDateTime, String, Long, Long, LocalDateTime, Long, Long, LocalDateTime, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
